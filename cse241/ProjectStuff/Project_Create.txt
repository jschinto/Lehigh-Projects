SELECT OWNER, TABLE_NAME
FROM ALL_TABLES;

CREATE TABLE products
(ID NUMBER(5),
TYPE VARCHAR(50),
PRIMARY KEY (ID));

CREATE TABLE product_type
(TYPE NUMBER(5),
SUPER_TYPE NUMBER(5),
PRIMARY KEY (TYPE, SUPER_TYPE),
FOREIGN KEY (TYPE) references PRODUCTS
on delete cascade,
FOREIGN KEY (SUPER_TYPE) references PRODUCTS
on delete cascade);

CREATE TABLE brand
(ID NUMBER(5),
NAME VARCHAR(50) NOT NULL,
PRIMARY KEY (ID));

CREATE TABLE vendor
(ID NUMBER(5),
NAME VARCHAR(50) NOT NULL,
LOCATION VARCHAR(50),
PRIMARY KEY (ID));

CREATE TABLE inv_purchase
(ID NUMBER(5),
AMOUNT NUMERIC(20,0) CHECK (AMOUNT > 0),
PRICE NUMERIC(20,2) CHECK (PRICE >= 0),
DATE_PURCH TIMESTAMP,
PRIMARY KEY (ID));

CREATE TABLE inv_totals
(ID NUMBER(5),
AMOUNT NUMERIC(20,0) CHECK (AMOUNT >= 0),
SALE_PRICE NUMERIC(20,2) CHECK (SALE_PRICE >= 0),
PRIMARY KEY (ID));

CREATE TABLE store
(ID NUMBER(5),
LOCATION VARCHAR(50),
PRIMARY KEY (ID));

CREATE TABLE customer
(ID NUMBER(5),
FIRST_NAME VARCHAR(20) NOT NULL,
LAST_NAME VARCHAR(20) NOT NULL,
ADDRESS VARCHAR(80),
CREDIT_CARD VARCHAR(20),
FREQUENT_SHOPPER CHAR(1 BYTE) NOT NULL,
PRIMARY KEY (ID));

CREATE TABLE transaction
(ID NUMBER(5),
PAYMENT_TYPE VARCHAR(20) NOT NULL,
AMOUNT NUMERIC(20,0) CHECK (AMOUNT > 0),
PRICE NUMERIC(20,2) CHECK (PRICE >= 0),
DATE_PURCH TIMESTAMP,
PRIMARY KEY (ID));

CREATE TABLE sells
(PURCHASE_ID NUMBER(5),
INV_ID NUMBER(5),
VENDOR_ID NUMBER(5),
PRODUCT_ID NUMBER(5),
BRAND_ID NUMBER(5),
PRIMARY KEY (PURCHASE_ID),
FOREIGN KEY (PURCHASE_ID) REFERENCES INV_PURCHASE 
ON DELETE CASCADE,
FOREIGN KEY (INV_ID) REFERENCES INV_TOTALS 
ON DELETE SET NULL,
FOREIGN KEY (VENDOR_ID) REFERENCES VENDOR 
ON DELETE SET NULL,
FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS 
ON DELETE SET NULL,
FOREIGN KEY (BRAND_ID) REFERENCES BRAND 
ON DELETE SET NULL);

CREATE TABLE store_inv
(INV_ID NUMBER(5),
STORE_ID NUMBER(5),
PRIMARY KEY (INV_ID),
FOREIGN KEY (INV_ID) REFERENCES INV_TOTALS 
ON DELETE CASCADE,
FOREIGN KEY (STORE_ID) REFERENCES STORE 
ON DELETE SET NULL);

CREATE TABLE customer_purchase
(TRANSACTION_ID NUMBER(5),
CUSTOMER_ID NUMBER(5),
INV_ID NUMBER(5),
STORE_ID NUMBER(5),
PRIMARY KEY (TRANSACTION_ID),
FOREIGN KEY (TRANSACTION_ID) REFERENCES TRANSACTION 
ON DELETE CASCADE,
FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER 
ON DELETE SET NULL,
FOREIGN KEY (INV_ID) REFERENCES INV_TOTALS 
ON DELETE SET NULL,
FOREIGN KEY (STORE_ID) REFERENCES STORE 
ON DELETE SET NULL);