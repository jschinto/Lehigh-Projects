SELECT OWNER, TABLE_NAME
FROM ALL_TABLES;

CREATE TABLE type
(TYPE_ID NUMBER GENERATED ALWAYS as IDENTITY(START with 1 INCREMENT by 1),
TYPE_NAME VARCHAR(50) UNIQUE,
PRIMARY KEY (TYPE_ID));

CREATE TABLE product
(PRODUCT_ID NUMBER GENERATED ALWAYS as IDENTITY(START with 1 INCREMENT by 1),
PRODUCT_NAME VARCHAR(50),
"SIZE" VARCHAR(50),
PRIMARY KEY (PRODUCT_ID));

CREATE TABLE brand
(BRAND_ID NUMBER GENERATED ALWAYS as IDENTITY(START with 1 INCREMENT by 1),
BRAND_NAME VARCHAR(50),
PRIMARY KEY (BRAND_ID));

CREATE TABLE vendor
(VENDOR_ID NUMBER GENERATED ALWAYS as IDENTITY(START with 1 INCREMENT by 1),
ADDRESS VARCHAR(50) NOT NULL,
ZIPCODE NUMBER(5) NOT NULL,
PRIMARY KEY (VENDOR_ID));

CREATE TABLE store
(STORE_ID NUMBER GENERATED ALWAYS as IDENTITY(START with 1 INCREMENT by 1),
ADDRESS VARCHAR(50) NOT NULL,
ZIPCODE NUMBER(5) NOT NULL,
PRIMARY KEY (STORE_ID));

CREATE TABLE inventory
(INV_ID NUMBER GENERATED ALWAYS as IDENTITY(START with 1 INCREMENT by 1),
TOTAL NUMBER(30) CHECK (TOTAL >= 0),
CURR_PRICE NUMBER(7,2) CHECK (CURR_PRICE >= 0),
PRIMARY KEY (INV_ID));

CREATE TABLE vendor_transaction
(TRANS_ID NUMBER GENERATED ALWAYS as IDENTITY(START with 1 INCREMENT by 1),
PRICE NUMBER(7,2) CHECK (PRICE >= 0),
AMOUNT NUMBER(30) CHECK (AMOUNT > 0),
PURCH_DATE TIMESTAMP,
PRIMARY KEY (TRANS_ID));

CREATE TABLE customer_transaction
(TRANS_ID NUMBER GENERATED ALWAYS as IDENTITY(START with 1 INCREMENT by 1),
PRICE NUMBER(7,2) CHECK (PRICE >= 0),
AMOUNT NUMBER(30) CHECK (AMOUNT > 0),
SALE_DATE TIMESTAMP,
IS_ONLINE CHAR(1) CHECK (IS_ONLINE = 'Y' OR IS_ONLINE = 'N'),
PAY_TYPE VARCHAR(10) NOT NULL,
PRIMARY KEY (TRANS_ID));

CREATE TABLE customer
(CUSTOMER_ID VARCHAR(20) NOT NULL,
FIRST_NAME VARCHAR(50) NOT NULL,
LAST_NAME VARCHAR(50) NOT NULL,
ADDRESS VARCHAR(50) NOT NULL,
ZIPCODE NUMBER(5) NOT NULL,
IS_FREQUENT_SHOPPER CHAR(1) CHECK (IS_FREQUENT_SHOPPER = 'Y' OR IS_FREQUENT_SHOPPER = 'N'),
IS_ONLINE_SHOPPER CHAR(1) CHECK (IS_ONLINE_SHOPPER = 'Y' OR IS_ONLINE_SHOPPER = 'N'),
PRIMARY KEY (CUSTOMER_ID));

CREATE TABLE food
(TYPE_ID NUMBER,
SUPER_ID NUMBER,
PRIMARY KEY (TYPE_ID),
FOREIGN KEY (TYPE_ID) references TYPE
on delete cascade,
FOREIGN KEY (SUPER_ID) references TYPE
on delete cascade);

CREATE TABLE not_food
(TYPE_ID NUMBER,
SUPER_ID NUMBER,
PRIMARY KEY (TYPE_ID),
FOREIGN KEY (TYPE_ID) references TYPE
on delete cascade,
FOREIGN KEY (SUPER_ID) references TYPE
on delete cascade);

CREATE TABLE credit
(TRANS_ID NUMBER,
CARD_NUM NUMBER(20) NOT NULL,
CVV NUMBER(4) NOT NULL,
EXP_DATE VARCHAR(5) NOT NULL,
PRIMARY KEY (TRANS_ID),
FOREIGN KEY (TRANS_ID) references customer_transaction
on delete cascade);

CREATE TABLE "CHECK"
(TRANS_ID NUMBER,
CHECK_NUM VARCHAR(25) NOT NULL,
PRIMARY KEY (TRANS_ID),
FOREIGN KEY (TRANS_ID) references customer_transaction
on delete cascade);

CREATE TABLE online_shopper
(CUSTOMER_ID VARCHAR(20),
CARD_NUM NUMBER(20) NOT NULL,
CVV NUMBER(4) NOT NULL,
EXP_DATE VARCHAR(5) NOT NULL,
PRIMARY KEY (CUSTOMER_ID),
FOREIGN KEY (CUSTOMER_ID) references customer
on delete cascade);

CREATE TABLE frequent_shopper
(CUSTOMER_ID VARCHAR(20),
AGE NUMBER(3),
GENDER VARCHAR(50),
PRIMARY KEY (CUSTOMER_ID),
FOREIGN KEY (CUSTOMER_ID) references customer
on delete cascade);

CREATE TABLE product_type
(TYPE_ID NUMBER,
PRODUCT_ID NUMBER,
PRIMARY KEY (TYPE_ID, PRODUCT_ID),
FOREIGN KEY (TYPE_ID) REFERENCES TYPE 
ON DELETE CASCADE,
FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT 
ON DELETE CASCADE);

CREATE TABLE product_brand
(BRAND_ID NUMBER,
PRODUCT_ID NUMBER,
PRIMARY KEY (PRODUCT_ID),
FOREIGN KEY (BRAND_ID) REFERENCES BRAND 
ON DELETE CASCADE,
FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT 
ON DELETE CASCADE);

CREATE TABLE inv_product
(INV_ID NUMBER,
PRODUCT_ID NUMBER,
PRIMARY KEY (INV_ID),
FOREIGN KEY (INV_ID) REFERENCES INVENTORY 
ON DELETE CASCADE,
FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT 
ON DELETE CASCADE);

CREATE TABLE vendor_product
(VENDOR_ID NUMBER,
PRODUCT_ID NUMBER,
VENDOR_PRICE NUMBER(7,2) CHECK (VENDOR_PRICE >= 0),
PRIMARY KEY (VENDOR_ID, PRODUCT_ID),
FOREIGN KEY (VENDOR_ID) REFERENCES VENDOR 
ON DELETE CASCADE,
FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT 
ON DELETE CASCADE);

CREATE TABLE store_inv
(INV_ID NUMBER,
STORE_ID NUMBER,
PRIMARY KEY (INV_ID),
FOREIGN KEY (INV_ID) REFERENCES INVENTORY 
ON DELETE CASCADE,
FOREIGN KEY (STORE_ID) REFERENCES STORE 
ON DELETE CASCADE);

CREATE TABLE inv_purchase
(INV_ID NUMBER,
VENDOR_ID NUMBER,
PRODUCT_ID NUMBER,
TRANS_ID NUMBER,
PRIMARY KEY (TRANS_ID),
FOREIGN KEY (TRANS_ID) REFERENCES VENDOR_TRANSACTION 
ON DELETE CASCADE,
FOREIGN KEY (INV_ID) REFERENCES INVENTORY
ON DELETE SET NULL,
FOREIGN KEY (VENDOR_ID) REFERENCES VENDOR
ON DELETE SET NULL,
FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT
ON DELETE SET NULL);

CREATE TABLE cust_purchase
(INV_ID NUMBER,
CUSTOMER_ID VARCHAR(20),
TRANS_ID NUMBER,
PRIMARY KEY (TRANS_ID),
FOREIGN KEY (TRANS_ID) REFERENCES CUSTOMER_TRANSACTION 
ON DELETE CASCADE,
FOREIGN KEY (INV_ID) REFERENCES INVENTORY
ON DELETE SET NULL,
FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER
ON DELETE SET NULL);