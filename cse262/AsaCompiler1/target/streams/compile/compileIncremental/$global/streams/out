[0m[[0m[0mdebug[0m] [0m[0mInvalidating /Users/jake/Documents/cse262/Prog5/lib/antlr4-runtime-4.7.2-SNAPSHOT.jar: class org.antlr.v4.runtime.tree.ParseTreeVisitor now provided by /Users/jake/Documents/cse262/AsaCompiler1/lib/antlr4-runtime-4.7.2-SNAPSHOT.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating /Users/jake/Documents/cse262/Prog5/lib/asm-6.2-SNAPSHOT.jar: class org.objectweb.asm.Label now provided by /Users/jake/Documents/cse262/AsaCompiler1/lib/asm-6.2-SNAPSHOT.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set(/Users/jake/Documents/cse262/Prog5/src/main/scala/ASTNodes.scala, /Users/jake/Documents/cse262/Prog5/src/main/scala/AsaCompiler.scala, /Users/jake/Documents/cse262/Prog5/src/main/scala/CodeGenerator.scala, /Users/jake/Documents/cse262/Prog5/src/main/scala/Operations.scala, /Users/jake/Documents/cse262/Prog5/src/main/scala/TypeTable.scala, /Users/jake/Documents/cse262/Prog5/src/main/scala/PrettyPrinter.scala, /Users/jake/Documents/cse262/Prog5/src/main/scala/SymbolTable.scala, /Users/jake/Documents/cse262/Prog5/src/main/scala/ClassFile.scala, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/src_managed/main/antlr4/AsaLexer.java, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/src_managed/main/antlr4/AsaVisitor.java, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/src_managed/main/antlr4/AsaParser.java, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/src_managed/main/antlr4/AsaBaseVisitor.java, /Users/jake/Documents/cse262/Prog5/src/main/scala/ASTBuilder.scala, /Users/jake/Documents/cse262/Prog5/src/main/scala/SemanticAnalyzer.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(/Users/jake/Documents/cse262/AsaCompiler1/src/main/scala/ASTBuilder.scala, /Users/jake/Documents/cse262/AsaCompiler1/src/main/scala/ASTNodes.scala, /Users/jake/Documents/cse262/AsaCompiler1/src/main/scala/ClassFile.scala, /Users/jake/Documents/cse262/AsaCompiler1/target/scala-2.12/src_managed/main/antlr4/AsaVisitor.java, /Users/jake/Documents/cse262/AsaCompiler1/target/scala-2.12/src_managed/main/antlr4/AsaBaseVisitor.java, /Users/jake/Documents/cse262/AsaCompiler1/src/main/scala/CodeGenerator.scala, /Users/jake/Documents/cse262/AsaCompiler1/src/main/scala/TypeTable.scala, /Users/jake/Documents/cse262/AsaCompiler1/src/main/scala/SymbolTable.scala, /Users/jake/Documents/cse262/AsaCompiler1/src/main/scala/AsaCompiler.scala, /Users/jake/Documents/cse262/AsaCompiler1/src/main/scala/SemanticAnalyzer.scala, /Users/jake/Documents/cse262/AsaCompiler1/src/main/scala/PrettyPrinter.scala, /Users/jake/Documents/cse262/AsaCompiler1/target/scala-2.12/src_managed/main/antlr4/AsaLexer.java, /Users/jake/Documents/cse262/AsaCompiler1/target/scala-2.12/src_managed/main/antlr4/AsaParser.java, /Users/jake/Documents/cse262/AsaCompiler1/src/main/scala/Operations.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set(/Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ASTORE_0$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ARRAY_TYPE.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FCONST_2.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ISTORE$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IINC.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/MethodModifiers.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ILOAD$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/NamedType.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ALOAD.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/TABLESWITCH$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IRETURN.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LSTORE.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IMUL.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IFGT.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ALOAD_3.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AsaParser$Compound_statementContext.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IUSHR$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/SALOAD$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LALOAD$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LLOAD_1.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/Location$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DLOAD_1$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AsaParser$DecimalIntegerLiteralAltContext.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FLOAD_2.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FLOAD_1$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LSTORE_0.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AsaParser$SetLiteralContext.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ICONST_2$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/PUTFIELD$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ISHL.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/SALOAD.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/SymbolTableEntry.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/GOTO_W.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ASTORE.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LASTORE$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DDIV$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DLOAD_3.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IASTORE$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FCMPG.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LADD.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DUP_X1.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LSTORE_2$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/I2D.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/REAL_TYPE.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ALOAD$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/SIPUSH.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AsaParser$OctalIntegerLiteralAltContext.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/VarDecl.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DUP_X2.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IFEQ$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/RET$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/MethodModifiers$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FCONST_1.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FSTORE_2$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DSTORE_0$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AsaCompiler.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/CaseLimb$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/BREAKPOINT.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IREM.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AssignmentStatement$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/Binop$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DLOAD_2.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/PUTFIELD.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IF_ICMPNE$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IF_ICMPGE$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AsaParser$While_statementContext.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/PrintfStatement$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LLOAD_3$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LUSHR$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LDIV.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/MULTIANEWARRAY.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/CALOAD.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AsaParser$Constant_definitionContext.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DUP_X1$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/Identifier.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/INVOKEDYNAMIC.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IdentKind$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AsaParser$TermContext.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LADD$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DCMPL.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ConstDef$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AsaParser$FloatingLiteralAltContext.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DREM$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/PrettyPrinter$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DSTORE_1$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LLOAD_2.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/Binop.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IOR.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DDIV.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ICONST_1.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DNEG$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/Unop.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/POP2$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/NEW$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/SetLiteral$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/I2F$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IF_ICMPEQ$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AsaParser$RelationalexpressionContext.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LCMP.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/I2D$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FIELD.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FADD.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ASTORE_2.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/CompoundStatement$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LOOKUPSWITCH$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ISTORE_0.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AsaParser$SetContext.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DASTORE.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/BREAKPOINT$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LSHL$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/SASTORE$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FMUL$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/SetType.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/VariableReference$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FLOAD_2$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FieldModifiers$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ICONST_3$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IFGT$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/D2L.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/RETURN$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DALOAD$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/Type$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/GETSTATIC.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/SUPER$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ClassFile.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AsaParser$SetLiteralAltContext.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LSTORE_1.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LABEL$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/TypeTableEntry$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IfStatement$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/I2C$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FLOAD_3.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/Literal$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/BOOLEAN_TYPE$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/Type.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DSTORE.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LCONST_1.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AsaParser$If_statementContext.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/POP2.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IREM$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FLOAD$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AsaParser$IntegerLiteralContext.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/INSTANCEOF$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IMPDEP1.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DUP2_X2$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FSTORE_0.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AsaParser.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ISHR.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/INVOKESPECIAL.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ISTORE_1$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IFLE$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DCMPL$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/NOP$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AsaParser$LogicalexpressionContext.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IdentKind.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ILOAD_3.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FSTORE.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LALOAD.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/F2D$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/Program.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ClassFile$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ILOAD_2.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IF_ICMPLT.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FSTORE_1$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/RETURN.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FSTORE_0$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IFEQ.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/I2L$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AsaType.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IOR$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/STRING_TYPE.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FLOAD.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ICONST_0$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DCONST_1$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/I2C.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ANEWARRAY$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LASTORE.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IMPDEP1$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FSTORE_3$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AsaParser$IntegerLiteralAltContext.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ASTORE_3$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FADD$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AsaParser$BooleanLiteralContext.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ISHR$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/JVMInstruction.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ALOAD_2$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ARETURN$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AsaCompiler$delayedInit$body.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/NEWARRAY$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/L2D$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IF_ACMPNE.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ASTNode.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IF_ACMPNE$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/INVOKEINTERFACE.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/INTEGER_TYPE$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/CodeGenerator.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FREM.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IDIV.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IAND.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LSHL.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LCONST_0$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/GOTO$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AALOAD$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DLOAD$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IFNE$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LREM.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/BIPUSH$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/Program$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/WIDE$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FSUB$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LUSHR.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IFNULL$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/CHECKCAST.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/END_METHOD.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DRETURN.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ICONST_1$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IASTORE.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AsaParser$BooleanLiteralAltContext.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/D2I$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AsaParser$LhsreferenceContext.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/BALOAD$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/REAL_TYPE$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AsaParser$Assignment_statementContext.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/D2L$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FCMPL$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/TypeTable.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AsaParser$HexadecimalIntegerLiteralAltContext.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ACONST_NULL.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FLOAD_3$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AsaParser$ArrayContext.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IF_ICMPLE.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ICONST_M1.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AsaParser$StringLiteralAltContext.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/GOTO_W$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ILOAD.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/TypeKind$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DSTORE_3$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/L2F.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DSTORE_2$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ForStatement$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LABEL.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/GETFIELD.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LCMP$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IFGE$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/Block.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ISUB.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LDC_W$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DLOAD_0.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ARETURN.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/TypeTableEntry.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LSUB$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/Literal.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/INTEGER_TYPE.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DUP2_X2.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LLOAD$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DSTORE_3.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DNEG.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AsaBaseVisitor.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AsaParser$IdentContext.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AASTORE$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FCONST_0$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/PrettyPrinter.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/SET_TYPE$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ICONST_4.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ALOAD_0$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LXOR$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DCONST_1.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IXOR.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/SetLiteral.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/L2I$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ASTBuilder.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IF_ICMPGE.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/POP.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/INVOKESPECIAL$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ILOAD_1$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DRETURN$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ATHROW$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/INVOKESTATIC.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/BASTORE.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/METHOD$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DMUL$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IF_ICMPLT$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ArrayType$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/GETFIELD$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ConstDef.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DCMPG$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LXOR.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DCONST_0$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/D2F$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ISTORE.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IF_ICMPGT.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FSTORE_1.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AsaLexer.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IF_ICMPEQ.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LLOAD_3.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/SemanticAnalyzer.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AsaParser$Repeat_statementContext.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AsaCompiler$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ALOAD_1.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/F2I.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ALOAD_0.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IFNONNULL$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IDIV$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ISTORE_0$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/F2L.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FDIV.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IAND$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DUP$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/I2B.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LCONST_0.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FRETURN.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IINC$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/GETSTATIC$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ASTORE_1.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FDIV$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/END_CLASS$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ISTORE_1.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/JVMNode.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/RepeatStatement.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/I2S.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/I2L.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ICONST_5.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FCONST_1$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AsaParser$Case_limbContext.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AsaParser$BlockContext.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DUP2_X1$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/MONITORENTER.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/CompoundStatement.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IALOAD$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/NEW.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IF_ICMPNE.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IF_ACMPEQ$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/I2B$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IF_ACMPEQ.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ILOAD_1.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IXOR$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LSTORE$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LNEG$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ILOAD_2$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LREM$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LRETURN.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LDC.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/CALOAD$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/WhileStatement$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ICONST_0.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/BALOAD.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AALOAD.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ICONST_4$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LOOKUPSWITCH.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/Expression.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IF_ICMPLE$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/SymbolTableEntry$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FNEG$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FALOAD$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ASTORE$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LRETURN$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ISUB$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LSTORE_2.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ArrayReference$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/METHOD.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AsaParser$Variable_declarationContext.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AsaParser$Case_statementContext.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/SWAP$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/L2D.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DMUL.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/SET_TYPE.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DSTORE$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AsaParser$SimpleexpressionContext.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/NamedType$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/NO_TYPE.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FLOAD_1.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LDC$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/TypeKind.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/INVOKEINTERFACE$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/MyClassLoader.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/MONITOREXIT.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ARRAY_TYPE$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IfStatement.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/D2I.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FRETURN$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FCONST_2$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/F2L$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/BASTORE$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/CaseStatement$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LAND.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ASTORE_3.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IFLE.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AsaParser$StatementContext.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/MULTIANEWARRAY$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ClassModifiers$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/Sdata.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AsaParser$IdentifierContext.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DLOAD.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LOR$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ASTORE_0.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/RET.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/I2F.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/TypeTable$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ICONST_2.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AsaParser$RhsvalueContext.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LCONST_1$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/VarDecl$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/TABLESWITCH.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ACONST_NULL$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AsaVisitor.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IF_ICMPGT$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IMUL$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/PrintfStatement.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/SymbolTable.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DUP2.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AsaParser$AtypeContext.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ICONST_3.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/CLASS$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/SWAP.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LNEG.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IRETURN$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ALOAD_2.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/WIDE.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/INEG$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/JSR_W.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DSTORE_2.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ASTORE_2$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/INVOKEVIRTUAL$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LSTORE_0$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DUP.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AASTORE.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/SymbolTable$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DUP2_X1.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ILOAD_0$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FNEG.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ISTORE_2.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/SetType$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/CaseStatement.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IMPDEP2$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/CaseLimb.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IALOAD.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IMPDEP2.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IFNE.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IADD$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LSHR.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AsaParser$FactorContext.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/L2I.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/JVMDirective.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/SIPUSH$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LSHR$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DCMPG.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ANEWARRAY.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DLOAD_0$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ISTORE_3$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DASTORE$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DSTORE_1.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LLOAD_0$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FASTORE$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FieldModifiers.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IFGE.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IFLT$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FIELD$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/CASTORE.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/CLASS.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DSUB.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/INVOKEDYNAMIC$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LSUB.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DUP_X2$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LDIV$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/GOTO.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/END_METHOD$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/Sdata$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FREM$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AsaParser$For_statementContext.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LDC2_W$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/D2F.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LMUL.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/BIPUSH.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FMUL.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DCONST_0.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AsaParser$LiteralContext.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/INEG.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/END_CLASS.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DLOAD_2$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/JSR$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ICONST_5$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/JSR.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/Unop$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ILOAD_3$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FLOAD_0$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DSTORE_0.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ForStatement.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FCMPG$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ICONST_M1$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/WhileStatement.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LLOAD.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/INVOKEVIRTUAL.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/MONITOREXIT$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/Location.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/CHECKCAST$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LDC_W.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/MONITORENTER$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ASTORE_1$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/INSTANCEOF.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AsaParser$Printf_statementContext.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/F2D.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LLOAD_1$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ISHL$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LLOAD_2$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/SASTORE.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LSTORE_3.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/STRING_TYPE$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LDC2_W.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IUSHR.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LSTORE_1$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LSTORE_3$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/POP$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AsaParser$NegationContext.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ArrayReference.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ATHROW.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FSTORE$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IFNONNULL.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LAND$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ILOAD_0.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/VariableReference.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/CASTORE$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/RepeatStatement$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ARRAYLENGTH$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FCMPL.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AsaParser$ProgramContext.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LMUL$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/INVOKESTATIC$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/NEWARRAY.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/F2I$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ALOAD_1$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/PUTSTATIC.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ARRAYLENGTH.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ClassModifiers.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/NO_TYPE$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ALOAD_3$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FSTORE_2.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/Branch.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/SUPER.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IFLT.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ArrayType.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/L2F$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FSTORE_3.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/Identifier$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/Block$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FLOAD_0.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/I2S$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FSUB.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/JSR_W$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/BOOLEAN_TYPE.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DSUB$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FCONST_0.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DALOAD.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DLOAD_3$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IFNULL.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LOR.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DUP2$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ISTORE_3.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DREM.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DADD.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/ISTORE_2$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/AssignmentStatement.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/NOP.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/PUTSTATIC$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/LLOAD_0.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/IADD.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DADD$.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FALOAD.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/FASTORE.class, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/classes/DLOAD_1.class)[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set(/Users/jake/Documents/cse262/Prog5/lib/antlr4-runtime-4.7.2-SNAPSHOT.jar, /Users/jake/Documents/cse262/Prog5/lib/asm-6.2-SNAPSHOT.jar)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(ICONST_2, Sdata, IAND, ASTORE_2, ASTBuilder, I2B, LAND, POP, FCONST_2, Location, D2L, L2I, CaseStatement, INVOKEINTERFACE, FREM, ISUB, ASTNode, Binop, ASTORE, SetType, TypeTableEntry, LSTORE_2, ALOAD_3, PrintfStatement, I2F, MONITOREXIT, ALOAD_1, L2F, ALOAD, DLOAD_3, WIDE, INVOKEVIRTUAL, ALOAD_0, FIELD, AsaParser.AtypeContext, DUP_X2, LLOAD_1, DUP2_X2, SIPUSH, ILOAD, IADD, DNEG, BIPUSH, IFEQ, IF_ICMPLT, LDC_W, RET, SASTORE, FSTORE_3, AsaParser.Case_statementContext, ACONST_NULL, IASTORE, DSTORE_0, INEG, ASTORE_3, IfStatement, DRETURN, JVMNode, AsaParser.SetLiteralAltContext, IXOR, ASTORE_0, ILOAD_1, AsaParser.StringLiteralAltContext, VarDecl, CodeGenerator, ISTORE_2, ConstDef, ILOAD_3, AALOAD, AsaLexer, AsaParser.IdentContext, AsaVisitor, CALOAD, AssignmentStatement, IFGT, FLOAD, CaseLimb, GOTO, IINC, JSR, INTEGER_TYPE, ICONST_5, LSTORE_1, AsaParser.SetContext, LCMP, I2C, ArrayReference, DLOAD_2, AsaParser.If_statementContext, DUP_X1, POP2, LXOR, AsaParser.Printf_statementContext, Literal, ISHR, LSHL, IF_ACMPEQ, DCMPL, ISHL, Expression, DSUB, LABEL, ICONST_1, AsaBaseVisitor, AsaParser.BooleanLiteralContext, IFNONNULL, FDIV, LALOAD, F2I, CHECKCAST, LLOAD_2, IF_ICMPGE, IDIV, NamedType, LLOAD, ISTORE, ARETURN, AsaParser.NegationContext, AsaParser.LogicalexpressionContext, VariableReference, LDC2_W, DSTORE_1, DUP2_X1, IFNE, BASTORE, ArrayType, IOR, I2L, LSHR, ISTORE_3, CompoundStatement, Program, FCMPL, NO_TYPE, SymbolTable, MyClassLoader, IFLT, DLOAD, LUSHR, AsaParser.StatementContext, JSR_W, PrettyPrinter, IF_ACMPNE, DMUL, FALOAD, AsaParser.RhsvalueContext, JVMInstruction, LCONST_0, BOOLEAN_TYPE, MONITORENTER, ARRAYLENGTH, INSTANCEOF, LNEG, MULTIANEWARRAY, L2D, METHOD, AsaParser, D2F, IREM, SemanticAnalyzer, ClassModifiers, IRETURN, ICONST_4, AsaParser.TermContext, WhileStatement, AsaParser.ArrayContext, AsaParser.For_statementContext, I2S, END_METHOD, NEW, LSTORE_0, IFNULL, MethodModifiers, PUTSTATIC, FSTORE_2, LASTORE, REAL_TYPE, JVMDirective, I2D, IF_ICMPEQ, RepeatStatement, LDIV, FCONST_0, GOTO_W, LCONST_1, D2I, ISTORE_0, LLOAD_3, ICONST_0, NOP, SALOAD, FSTORE, INVOKEDYNAMIC, AsaParser.BooleanLiteralAltContext, AsaParser.FloatingLiteralAltContext, SetLiteral, IMPDEP2, IF_ICMPNE, FSTORE_1, LSTORE, AsaParser.Variable_declarationContext, LSTORE_3, DCONST_0, AsaParser.IntegerLiteralAltContext, NEWARRAY, AsaParser.SetLiteralContext, LOOKUPSWITCH, FNEG, TABLESWITCH, ForStatement, GETSTATIC, DUP2, AsaParser.OctalIntegerLiteralAltContext, IF_ICMPLE, Branch, BALOAD, DLOAD_1, ClassFile, LADD, FLOAD_1, CASTORE, FADD, SWAP, FLOAD_0, Identifier, END_CLASS, ANEWARRAY, AsaParser.LhsreferenceContext, AsaParser.IntegerLiteralContext, RETURN, AsaType, AsaParser.LiteralContext, F2D, IMPDEP1, SymbolTableEntry, FMUL, ALOAD_2, AsaParser.Compound_statementContext, FieldModifiers, FCMPG, GETFIELD, AsaParser.SimpleexpressionContext, AsaParser.Repeat_statementContext, FLOAD_3, LMUL, DASTORE, FCONST_1, AsaParser.IdentifierContext, SUPER, IF_ICMPGT, ICONST_3, LRETURN, LOR, DREM, FSTORE_0, AsaParser.Constant_definitionContext, DSTORE_2, DUP, LLOAD_0, AsaParser.While_statementContext, DADD, IFGE, SET_TYPE, ARRAY_TYPE, LREM, DSTORE_3, F2L, AsaParser.BlockContext, AsaParser.Case_limbContext, Block, FLOAD_2, DALOAD, IdentKind, IALOAD, CLASS, DCMPG, STRING_TYPE, FRETURN, Unop, TypeKind, LSUB, IFLE, IUSHR, ICONST_M1, AASTORE, BREAKPOINT, AsaParser.DecimalIntegerLiteralAltContext, FASTORE, DDIV, INVOKESTATIC, DCONST_1, TypeTable, AsaParser.FactorContext, LDC, ATHROW, DSTORE, AsaCompiler, DLOAD_0, ILOAD_0, AsaParser.HexadecimalIntegerLiteralAltContext, ISTORE_1, AsaParser.Assignment_statementContext, FSUB, IMUL, PUTFIELD, INVOKESPECIAL, AsaParser.RelationalexpressionContext, Type, ASTORE_1, ILOAD_2, AsaParser.ProgramContext)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set(/Users/jake/Documents/cse262/Prog5/src/main/scala/ASTNodes.scala, /Users/jake/Documents/cse262/Prog5/src/main/scala/AsaCompiler.scala, /Users/jake/Documents/cse262/Prog5/src/main/scala/CodeGenerator.scala, /Users/jake/Documents/cse262/Prog5/src/main/scala/Operations.scala, /Users/jake/Documents/cse262/Prog5/src/main/scala/TypeTable.scala, /Users/jake/Documents/cse262/Prog5/src/main/scala/PrettyPrinter.scala, /Users/jake/Documents/cse262/Prog5/src/main/scala/SymbolTable.scala, /Users/jake/Documents/cse262/Prog5/src/main/scala/ClassFile.scala, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/src_managed/main/antlr4/AsaLexer.java, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/src_managed/main/antlr4/AsaVisitor.java, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/src_managed/main/antlr4/AsaParser.java, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/src_managed/main/antlr4/AsaBaseVisitor.java, /Users/jake/Documents/cse262/Prog5/src/main/scala/ASTBuilder.scala, /Users/jake/Documents/cse262/Prog5/src/main/scala/SemanticAnalyzer.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set(/Users/jake/Documents/cse262/Prog5/src/main/scala/AsaCompiler.scala, /Users/jake/Documents/cse262/Prog5/src/main/scala/ClassFile.scala, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/src_managed/main/antlr4/AsaLexer.java, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/src_managed/main/antlr4/AsaVisitor.java, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/src_managed/main/antlr4/AsaParser.java, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/src_managed/main/antlr4/AsaBaseVisitor.java, /Users/jake/Documents/cse262/Prog5/src/main/scala/ASTBuilder.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(ICONST_2, Sdata, IAND, ASTORE_2, ASTBuilder, I2B, LAND, POP, FCONST_2, Location, D2L, L2I, CaseStatement, INVOKEINTERFACE, FREM, ISUB, ASTNode, Binop, ASTORE, SetType, TypeTableEntry, LSTORE_2, ALOAD_3, PrintfStatement, I2F, MONITOREXIT, ALOAD_1, L2F, ALOAD, DLOAD_3, WIDE, INVOKEVIRTUAL, ALOAD_0, FIELD, AsaParser.AtypeContext, DUP_X2, LLOAD_1, DUP2_X2, SIPUSH, ILOAD, IADD, DNEG, BIPUSH, IFEQ, IF_ICMPLT, LDC_W, RET, SASTORE, FSTORE_3, AsaParser.Case_statementContext, ACONST_NULL, IASTORE, DSTORE_0, INEG, ASTORE_3, IfStatement, DRETURN, JVMNode, AsaParser.SetLiteralAltContext, IXOR, ASTORE_0, ILOAD_1, AsaParser.StringLiteralAltContext, VarDecl, CodeGenerator, ISTORE_2, ConstDef, ILOAD_3, AALOAD, AsaLexer, AsaParser.IdentContext, AsaVisitor, CALOAD, AssignmentStatement, IFGT, FLOAD, CaseLimb, GOTO, IINC, JSR, INTEGER_TYPE, ICONST_5, LSTORE_1, AsaParser.SetContext, LCMP, I2C, ArrayReference, DLOAD_2, AsaParser.If_statementContext, DUP_X1, POP2, LXOR, AsaParser.Printf_statementContext, Literal, ISHR, LSHL, IF_ACMPEQ, DCMPL, ISHL, Expression, DSUB, LABEL, ICONST_1, AsaBaseVisitor, AsaParser.BooleanLiteralContext, IFNONNULL, FDIV, LALOAD, F2I, CHECKCAST, LLOAD_2, IF_ICMPGE, IDIV, NamedType, LLOAD, ISTORE, ARETURN, AsaParser.NegationContext, AsaParser.LogicalexpressionContext, VariableReference, LDC2_W, DSTORE_1, DUP2_X1, IFNE, BASTORE, ArrayType, IOR, I2L, LSHR, ISTORE_3, CompoundStatement, Program, FCMPL, NO_TYPE, SymbolTable, MyClassLoader, IFLT, DLOAD, LUSHR, AsaParser.StatementContext, JSR_W, PrettyPrinter, IF_ACMPNE, DMUL, FALOAD, AsaParser.RhsvalueContext, JVMInstruction, LCONST_0, BOOLEAN_TYPE, MONITORENTER, ARRAYLENGTH, INSTANCEOF, LNEG, MULTIANEWARRAY, L2D, METHOD, AsaParser, D2F, IREM, SemanticAnalyzer, ClassModifiers, IRETURN, ICONST_4, AsaParser.TermContext, WhileStatement, AsaParser.ArrayContext, AsaParser.For_statementContext, I2S, END_METHOD, NEW, LSTORE_0, IFNULL, MethodModifiers, PUTSTATIC, FSTORE_2, LASTORE, REAL_TYPE, JVMDirective, I2D, IF_ICMPEQ, RepeatStatement, LDIV, FCONST_0, GOTO_W, LCONST_1, D2I, ISTORE_0, LLOAD_3, ICONST_0, NOP, SALOAD, FSTORE, INVOKEDYNAMIC, AsaParser.BooleanLiteralAltContext, AsaParser.FloatingLiteralAltContext, SetLiteral, IMPDEP2, IF_ICMPNE, FSTORE_1, LSTORE, AsaParser.Variable_declarationContext, LSTORE_3, DCONST_0, AsaParser.IntegerLiteralAltContext, NEWARRAY, AsaParser.SetLiteralContext, LOOKUPSWITCH, FNEG, TABLESWITCH, ForStatement, GETSTATIC, DUP2, AsaParser.OctalIntegerLiteralAltContext, IF_ICMPLE, Branch, BALOAD, DLOAD_1, ClassFile, LADD, FLOAD_1, CASTORE, FADD, SWAP, FLOAD_0, Identifier, END_CLASS, ANEWARRAY, AsaParser.LhsreferenceContext, AsaParser.IntegerLiteralContext, RETURN, AsaType, AsaParser.LiteralContext, F2D, IMPDEP1, SymbolTableEntry, FMUL, ALOAD_2, AsaParser.Compound_statementContext, FieldModifiers, FCMPG, GETFIELD, AsaParser.SimpleexpressionContext, AsaParser.Repeat_statementContext, FLOAD_3, LMUL, DASTORE, FCONST_1, AsaParser.IdentifierContext, SUPER, IF_ICMPGT, ICONST_3, LRETURN, LOR, DREM, FSTORE_0, AsaParser.Constant_definitionContext, DSTORE_2, DUP, LLOAD_0, AsaParser.While_statementContext, DADD, IFGE, SET_TYPE, ARRAY_TYPE, LREM, DSTORE_3, F2L, AsaParser.BlockContext, AsaParser.Case_limbContext, Block, FLOAD_2, DALOAD, IdentKind, IALOAD, CLASS, DCMPG, STRING_TYPE, FRETURN, Unop, TypeKind, LSUB, IFLE, IUSHR, ICONST_M1, AASTORE, BREAKPOINT, AsaParser.DecimalIntegerLiteralAltContext, FASTORE, DDIV, INVOKESTATIC, DCONST_1, TypeTable, AsaParser.FactorContext, LDC, ATHROW, DSTORE, AsaCompiler, DLOAD_0, ILOAD_0, AsaParser.HexadecimalIntegerLiteralAltContext, ISTORE_1, AsaParser.Assignment_statementContext, FSUB, IMUL, PUTFIELD, INVOKESPECIAL, AsaParser.RelationalexpressionContext, Type, ASTORE_1, ILOAD_2, AsaParser.ProgramContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(/Users/jake/Documents/cse262/AsaCompiler1/src/main/scala/ASTBuilder.scala, /Users/jake/Documents/cse262/AsaCompiler1/src/main/scala/ASTNodes.scala, /Users/jake/Documents/cse262/Prog5/src/main/scala/ASTNodes.scala, /Users/jake/Documents/cse262/AsaCompiler1/src/main/scala/ClassFile.scala, /Users/jake/Documents/cse262/Prog5/src/main/scala/AsaCompiler.scala, /Users/jake/Documents/cse262/Prog5/src/main/scala/CodeGenerator.scala, /Users/jake/Documents/cse262/AsaCompiler1/target/scala-2.12/src_managed/main/antlr4/AsaVisitor.java, /Users/jake/Documents/cse262/AsaCompiler1/target/scala-2.12/src_managed/main/antlr4/AsaBaseVisitor.java, /Users/jake/Documents/cse262/AsaCompiler1/src/main/scala/CodeGenerator.scala, /Users/jake/Documents/cse262/AsaCompiler1/src/main/scala/TypeTable.scala, /Users/jake/Documents/cse262/AsaCompiler1/src/main/scala/SymbolTable.scala, /Users/jake/Documents/cse262/Prog5/src/main/scala/Operations.scala, /Users/jake/Documents/cse262/Prog5/src/main/scala/TypeTable.scala, /Users/jake/Documents/cse262/Prog5/src/main/scala/PrettyPrinter.scala, /Users/jake/Documents/cse262/Prog5/src/main/scala/SymbolTable.scala, /Users/jake/Documents/cse262/AsaCompiler1/src/main/scala/AsaCompiler.scala, /Users/jake/Documents/cse262/AsaCompiler1/src/main/scala/SemanticAnalyzer.scala, /Users/jake/Documents/cse262/Prog5/src/main/scala/ClassFile.scala, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/src_managed/main/antlr4/AsaLexer.java, /Users/jake/Documents/cse262/AsaCompiler1/src/main/scala/PrettyPrinter.scala, /Users/jake/Documents/cse262/AsaCompiler1/target/scala-2.12/src_managed/main/antlr4/AsaLexer.java, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/src_managed/main/antlr4/AsaVisitor.java, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/src_managed/main/antlr4/AsaParser.java, /Users/jake/Documents/cse262/Prog5/target/scala-2.12/src_managed/main/antlr4/AsaBaseVisitor.java, /Users/jake/Documents/cse262/AsaCompiler1/target/scala-2.12/src_managed/main/antlr4/AsaParser.java, /Users/jake/Documents/cse262/Prog5/src/main/scala/ASTBuilder.scala, /Users/jake/Documents/cse262/AsaCompiler1/src/main/scala/Operations.scala, /Users/jake/Documents/cse262/Prog5/src/main/scala/SemanticAnalyzer.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mRecompiling all 14 sources: invalidated sources (28) exceeded 50.0% of all sources[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 10 Scala sources and 4 Java sources to /Users/jake/Documents/cse262/AsaCompiler1/target/scala-2.12/classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.0.0:compile for Scala 2.12.3[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.0.0:compile for Scala 2.12.3[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 546daa41 for Scala compiler version 2.12.3[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-unchecked[0m
[0m[[0m[0mdebug[0m] [0m[0m	-deprecation[0m
[0m[[0m[0mdebug[0m] [0m[0m	-feature[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/classes:/Users/jake/.sbt/boot/scala-2.12.3/lib/scala-library.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/Users/jake/Documents/cse262/AsaCompiler1/target/scala-2.12/classes:/Users/jake/Documents/cse262/AsaCompiler1/lib/antlr4-runtime-4.7.2-SNAPSHOT.jar:/Users/jake/Documents/cse262/AsaCompiler1/lib/asm-6.2-SNAPSHOT.jar:/Users/jake/.ivy2/cache/org.antlr/antlr4-runtime/jars/antlr4-runtime-4.7.1.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 19.27842402 s[0m
[0m[[0m[0mdebug[0m] [0m[0mAttempting to call com.sun.tools.javac.api.JavacTool@30676a93 directly...[0m
[0m[[0m[0mdebug[0m] [0m[0mJava compilation took 2.633821314 s[0m
[0m[[0m[0mdebug[0m] [0m[0mJava analysis took 0.051213357 s[0m
[0m[[0m[0mdebug[0m] [0m[0mJava compilation + analysis took 2.705737744 s[0m
[0m[[0m[0minfo[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from AsaParser.Case_statementContext...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(AsaParser.Case_statementContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(AsaParser.Case_statementContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ASTBuilder: Set(UsedName(simpleexpression,[Default]), UsedName(Case_statementContext,[Default]), UsedName(start,[Default]), UsedName(case_limb,[Default]), UsedName(getText,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(AsaParser.Case_statementContext,ModifiedNames(changes = UsedName(END,[Default]), UsedName(getChild,[Default]), UsedName(simpleexpression,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(Case_statementContext,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(OF,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(AsaParser$Case_statementContext;init;,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(setAltNumber,[Default]), UsedName(case_limb,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(CASE,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]))) invalidates 2 classes due to The AsaParser.Case_statementContext has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(END,[Default]), UsedName(getChild,[Default]), UsedName(simpleexpression,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(Case_statementContext,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(OF,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(AsaParser$Case_statementContext;init;,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(setAltNumber,[Default]), UsedName(case_limb,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(CASE,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(AsaParser.Case_statementContext)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(ASTBuilder)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from AsaParser.BooleanLiteralAltContext...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(AsaParser.BooleanLiteralAltContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(AsaParser.BooleanLiteralAltContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ASTBuilder: Set(UsedName(booleanLiteral,[Default]), UsedName(BooleanLiteralAltContext,[Default]), UsedName(start,[Default]), UsedName(getText,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(AsaParser.BooleanLiteralAltContext,ModifiedNames(changes = UsedName(getChild,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(booleanLiteral,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(BooleanLiteralAltContext,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(AsaParser$BooleanLiteralAltContext;init;,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]))) invalidates 2 classes due to The AsaParser.BooleanLiteralAltContext has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getChild,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(booleanLiteral,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(BooleanLiteralAltContext,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(AsaParser$BooleanLiteralAltContext;init;,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(AsaParser.BooleanLiteralAltContext)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(ASTBuilder)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from AsaParser.AtypeContext...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(AsaParser.AtypeContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(AsaParser.AtypeContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ASTBuilder: Set(UsedName(start,[Default]), UsedName(AtypeContext,[Default]), UsedName(getText,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(AsaParser.AtypeContext,ModifiedNames(changes = UsedName(getChild,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(AtypeContext,[Default]), UsedName(AsaParser$AtypeContext;init;,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]))) invalidates 2 classes due to The AsaParser.AtypeContext has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getChild,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(AtypeContext,[Default]), UsedName(AsaParser$AtypeContext;init;,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(AsaParser.AtypeContext)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(ASTBuilder)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from AsaParser.NegationContext...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(AsaParser.NegationContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(AsaParser.NegationContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ASTBuilder: Set(UsedName(NOT,[Default]), UsedName(NegationContext,[Default]), UsedName(factor,[Default]), UsedName(start,[Default]), UsedName(getText,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(AsaParser.NegationContext,ModifiedNames(changes = UsedName(getChild,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(NOT,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(NegationContext,[Default]), UsedName(factor,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(AsaParser$NegationContext;init;,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]))) invalidates 2 classes due to The AsaParser.NegationContext has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getChild,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(NOT,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(NegationContext,[Default]), UsedName(factor,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(AsaParser$NegationContext;init;,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(AsaParser.NegationContext)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(ASTBuilder)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from ASTBuilder...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(ASTBuilder)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(ASTBuilder)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of AsaCompiler. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(ASTBuilder,ModifiedNames(changes = UsedName(visitBooleanLiteral,[Default]), UsedName(visitSetLiteralAlt,[Default]))) invalidates 1 classes due to The ASTBuilder has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(visitBooleanLiteral,[Default]), UsedName(visitSetLiteralAlt,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(ASTBuilder)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from AsaParser.Variable_declarationContext...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(AsaParser.Variable_declarationContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(AsaParser.Variable_declarationContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ASTBuilder: Set(UsedName(atype,[Default]), UsedName(Variable_declarationContext,[Default]), UsedName(start,[Default]), UsedName(IDENT,[Default]), UsedName(getText,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(AsaParser.Variable_declarationContext,ModifiedNames(changes = UsedName(getChild,[Default]), UsedName(AsaParser$Variable_declarationContext;init;,[Default]), UsedName(COMMA,[Default]), UsedName(enterRule,[Default]), UsedName(atype,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(Variable_declarationContext,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(COLON,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(IDENT,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]))) invalidates 2 classes due to The AsaParser.Variable_declarationContext has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getChild,[Default]), UsedName(AsaParser$Variable_declarationContext;init;,[Default]), UsedName(COMMA,[Default]), UsedName(enterRule,[Default]), UsedName(atype,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(Variable_declarationContext,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(COLON,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(IDENT,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(AsaParser.Variable_declarationContext)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(ASTBuilder)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from AsaParser.Compound_statementContext...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(AsaParser.Compound_statementContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(AsaParser.Compound_statementContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ASTBuilder: Set(UsedName(Compound_statementContext,[Default]), UsedName(start,[Default]), UsedName(statement,[Default]), UsedName(getText,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(AsaParser.Compound_statementContext,ModifiedNames(changes = UsedName(END,[Default]), UsedName(getChild,[Default]), UsedName(AsaParser$Compound_statementContext;init;,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(toInfoString,[Default]), UsedName(Compound_statementContext,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(BEGIN,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(statement,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]))) invalidates 2 classes due to The AsaParser.Compound_statementContext has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(END,[Default]), UsedName(getChild,[Default]), UsedName(AsaParser$Compound_statementContext;init;,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(toInfoString,[Default]), UsedName(Compound_statementContext,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(BEGIN,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(statement,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(AsaParser.Compound_statementContext)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(ASTBuilder)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from AsaParser.SetContext...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(AsaParser.SetContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(AsaParser.SetContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ASTBuilder: Set(UsedName(SetContext,[Default]), UsedName(start,[Default]), UsedName(getText,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(AsaParser.SetContext,ModifiedNames(changes = UsedName(getChild,[Default]), UsedName(SetContext,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(SET,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(AsaParser$SetContext;init;,[Default]), UsedName(toString,[Default]))) invalidates 2 classes due to The AsaParser.SetContext has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getChild,[Default]), UsedName(SetContext,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(SET,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(AsaParser$SetContext;init;,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(AsaParser.SetContext)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(ASTBuilder)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from AsaParser.SimpleexpressionContext...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(AsaParser.SimpleexpressionContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(AsaParser.SimpleexpressionContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ASTBuilder: Set(UsedName(SimpleexpressionContext,[Default]), UsedName(op,[Default]), UsedName(start,[Default]), UsedName(term,[Default]), UsedName(getText,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(AsaParser.SimpleexpressionContext,ModifiedNames(changes = UsedName(SimpleexpressionContext,[Default]), UsedName(getChild,[Default]), UsedName(MINUS,[Default]), UsedName(PLUS,[Default]), UsedName(enterRule,[Default]), UsedName(_tset574,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(op,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(setAltNumber,[Default]), UsedName(term,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(AsaParser$SimpleexpressionContext;init;,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]))) invalidates 2 classes due to The AsaParser.SimpleexpressionContext has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(SimpleexpressionContext,[Default]), UsedName(getChild,[Default]), UsedName(MINUS,[Default]), UsedName(PLUS,[Default]), UsedName(enterRule,[Default]), UsedName(_tset574,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(op,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(setAltNumber,[Default]), UsedName(term,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(AsaParser$SimpleexpressionContext;init;,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(AsaParser.SimpleexpressionContext)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(ASTBuilder)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from AsaParser.BlockContext...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(AsaParser.BlockContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(AsaParser.BlockContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ASTBuilder: Set(UsedName(compound_statement,[Default]), UsedName(BlockContext,[Default]), UsedName(variable_declaration,[Default]), UsedName(start,[Default]), UsedName(constant_definition,[Default]), UsedName(getText,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(AsaParser.BlockContext,ModifiedNames(changes = UsedName(getChild,[Default]), UsedName(enterRule,[Default]), UsedName(compound_statement,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(CONST,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(SEMICOLON,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(BlockContext,[Default]), UsedName(VAR,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(variable_declaration,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(AsaParser$BlockContext;init;,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(constant_definition,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]))) invalidates 2 classes due to The AsaParser.BlockContext has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getChild,[Default]), UsedName(enterRule,[Default]), UsedName(compound_statement,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(CONST,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(SEMICOLON,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(BlockContext,[Default]), UsedName(VAR,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(variable_declaration,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(AsaParser$BlockContext;init;,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(constant_definition,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(AsaParser.BlockContext)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(ASTBuilder)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from AsaParser.LhsreferenceContext...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(AsaParser.LhsreferenceContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(AsaParser.LhsreferenceContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ASTBuilder: Set(UsedName(simpleexpression,[Default]), UsedName(identifier,[Default]), UsedName(start,[Default]), UsedName(LhsreferenceContext,[Default]), UsedName(getText,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(AsaParser.LhsreferenceContext,ModifiedNames(changes = UsedName(getChild,[Default]), UsedName(simpleexpression,[Default]), UsedName(LBRACKET,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(identifier,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(RBRACKET,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(LhsreferenceContext,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]), UsedName(AsaParser$LhsreferenceContext;init;,[Default]))) invalidates 2 classes due to The AsaParser.LhsreferenceContext has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getChild,[Default]), UsedName(simpleexpression,[Default]), UsedName(LBRACKET,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(identifier,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(RBRACKET,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(LhsreferenceContext,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]), UsedName(AsaParser$LhsreferenceContext;init;,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(AsaParser.LhsreferenceContext)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(ASTBuilder)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from AsaParser.IntegerLiteralContext...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(AsaParser.IntegerLiteralContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(AsaParser.IntegerLiteralContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ASTBuilder: Set(UsedName(IntegerLiteralContext,[Default]), UsedName(start,[Default]), UsedName(getText,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(AsaParser.IntegerLiteralContext,ModifiedNames(changes = UsedName(getChild,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(IntegerLiteralContext,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(parent,[Default]), UsedName(AsaParser$IntegerLiteralContext;init;,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]))) invalidates 2 classes due to The AsaParser.IntegerLiteralContext has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getChild,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(IntegerLiteralContext,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(parent,[Default]), UsedName(AsaParser$IntegerLiteralContext;init;,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(AsaParser.IntegerLiteralContext)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(ASTBuilder)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from AsaBaseVisitor...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(AsaBaseVisitor)[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding ASTBuilder by AsaBaseVisitor[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(ASTBuilder, AsaBaseVisitor)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of AsaCompiler: Set(UsedName(visit,[Default]), UsedName(toString,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ASTBuilder: Set(UsedName(AsaBaseVisitor,[Default]), UsedName(AsaBaseVisitor;init;,[Default]), UsedName(visit,[Default]), UsedName(visitChildren,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(AsaBaseVisitor,ModifiedNames(changes = UsedName(AsaBaseVisitor,[Default]), UsedName(visitHexadecimalIntegerLiteralAlt,[Default]), UsedName(AsaBaseVisitor;init;,[Default]), UsedName(visitSetLiteral,[Default]), UsedName(visitRepeat_statement,[Default]), UsedName(visitTerm,[Default]), UsedName(hashCode,[Default]), UsedName(visitDecimalIntegerLiteralAlt,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(visitSimpleexpression,[Default]), UsedName(visitStatement,[Default]), UsedName(equals,[Default]), UsedName(visitOctalIntegerLiteralAlt,[Default]), UsedName(visitBooleanLiteralAlt,[Default]), UsedName(visitAssignment_statement,[Default]), UsedName(visitBlock,[Default]), UsedName(visitVariable_declaration,[Default]), UsedName(visit,[Default]), UsedName(visitSetLiteralAlt,[Default]), UsedName(visitWhile_statement,[Default]), UsedName(visitCase_limb,[Default]), UsedName(visitConstant_definition,[Default]), UsedName(visitRhsvalue,[Default]), UsedName(visitFloatingLiteralAlt,[Default]), UsedName(visitLogicalexpression,[Default]), UsedName(visitTerminal,[Default]), UsedName(visitIf_statement,[Default]), UsedName(visitFactor,[Default]), UsedName(visitBooleanLiteral,[Default]), UsedName(visitCase_statement,[Default]), UsedName(wait,[Default]), UsedName(visitRelationalexpression,[Default]), UsedName(visitNegation,[Default]), UsedName(visitCompound_statement,[Default]), UsedName(visitFor_statement,[Default]), UsedName(visitIntegerLiteralAlt,[Default]), UsedName(notify,[Default]), UsedName(visitIdentifier,[Default]), UsedName(visitStringLiteralAlt,[Default]), UsedName(visitPrintf_statement,[Default]), UsedName(visitSet,[Default]), UsedName(visitArray,[Default]), UsedName(visitIdent,[Default]), UsedName(visitProgram,[Default]), UsedName(visitErrorNode,[Default]), UsedName(visitLhsreference,[Default]), UsedName(visitChildren,[Default]), UsedName(toString,[Default]))) invalidates 3 classes due to The AsaBaseVisitor has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(AsaBaseVisitor,[Default]), UsedName(visitHexadecimalIntegerLiteralAlt,[Default]), UsedName(AsaBaseVisitor;init;,[Default]), UsedName(visitSetLiteral,[Default]), UsedName(visitRepeat_statement,[Default]), UsedName(visitTerm,[Default]), UsedName(hashCode,[Default]), UsedName(visitDecimalIntegerLiteralAlt,[Default]), UsedName(notifyAll,[Default]), UsedName(getClass,[Default]), UsedName(visitSimpleexpression,[Default]), UsedName(visitStatement,[Default]), UsedName(equals,[Default]), UsedName(visitOctalIntegerLiteralAlt,[Default]), UsedName(visitBooleanLiteralAlt,[Default]), UsedName(visitAssignment_statement,[Default]), UsedName(visitBlock,[Default]), UsedName(visitVariable_declaration,[Default]), UsedName(visit,[Default]), UsedName(visitSetLiteralAlt,[Default]), UsedName(visitWhile_statement,[Default]), UsedName(visitCase_limb,[Default]), UsedName(visitConstant_definition,[Default]), UsedName(visitRhsvalue,[Default]), UsedName(visitFloatingLiteralAlt,[Default]), UsedName(visitLogicalexpression,[Default]), UsedName(visitTerminal,[Default]), UsedName(visitIf_statement,[Default]), UsedName(visitFactor,[Default]), UsedName(visitBooleanLiteral,[Default]), UsedName(visitCase_statement,[Default]), UsedName(wait,[Default]), UsedName(visitRelationalexpression,[Default]), UsedName(visitNegation,[Default]), UsedName(visitCompound_statement,[Default]), UsedName(visitFor_statement,[Default]), UsedName(visitIntegerLiteralAlt,[Default]), UsedName(notify,[Default]), UsedName(visitIdentifier,[Default]), UsedName(visitStringLiteralAlt,[Default]), UsedName(visitPrintf_statement,[Default]), UsedName(visitSet,[Default]), UsedName(visitArray,[Default]), UsedName(visitIdent,[Default]), UsedName(visitProgram,[Default]), UsedName(visitErrorNode,[Default]), UsedName(visitLhsreference,[Default]), UsedName(visitChildren,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(ASTBuilder, AsaBaseVisitor)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(AsaCompiler, ASTBuilder)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from AsaParser.RelationalexpressionContext...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(AsaParser.RelationalexpressionContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(AsaParser.RelationalexpressionContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ASTBuilder: Set(UsedName(simpleexpression,[Default]), UsedName(op,[Default]), UsedName(RelationalexpressionContext,[Default]), UsedName(start,[Default]), UsedName(getText,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(AsaParser.RelationalexpressionContext,ModifiedNames(changes = UsedName(getChild,[Default]), UsedName(simpleexpression,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(IN,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(op,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(GREATERTHANOREQUALTO,[Default]), UsedName(RelationalexpressionContext,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(GREATERTHAN,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(NOTEQUALTO,[Default]), UsedName(EQUALS,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(LESSTHAN,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(LESSTHANOREQUALTO,[Default]), UsedName(AsaParser$RelationalexpressionContext;init;,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]))) invalidates 2 classes due to The AsaParser.RelationalexpressionContext has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getChild,[Default]), UsedName(simpleexpression,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(IN,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(op,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(GREATERTHANOREQUALTO,[Default]), UsedName(RelationalexpressionContext,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(GREATERTHAN,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(NOTEQUALTO,[Default]), UsedName(EQUALS,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(LESSTHAN,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(LESSTHANOREQUALTO,[Default]), UsedName(AsaParser$RelationalexpressionContext;init;,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(AsaParser.RelationalexpressionContext)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(ASTBuilder)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from AsaParser.StatementContext...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(AsaParser.StatementContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(AsaParser.StatementContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ASTBuilder: Set(UsedName(compound_statement,[Default]), UsedName(start,[Default]), UsedName(getText,[Default]), UsedName(StatementContext,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(AsaParser.StatementContext,ModifiedNames(changes = UsedName(getChild,[Default]), UsedName(printf_statement,[Default]), UsedName(enterRule,[Default]), UsedName(compound_statement,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(for_statement,[Default]), UsedName(addChild,[Default]), UsedName(assignment_statement,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(if_statement,[Default]), UsedName(parent,[Default]), UsedName(case_statement,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(AsaParser$StatementContext;init;,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(StatementContext,[Default]), UsedName(repeat_statement,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(while_statement,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]))) invalidates 2 classes due to The AsaParser.StatementContext has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getChild,[Default]), UsedName(printf_statement,[Default]), UsedName(enterRule,[Default]), UsedName(compound_statement,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(for_statement,[Default]), UsedName(addChild,[Default]), UsedName(assignment_statement,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(if_statement,[Default]), UsedName(parent,[Default]), UsedName(case_statement,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(AsaParser$StatementContext;init;,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(StatementContext,[Default]), UsedName(repeat_statement,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(while_statement,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(AsaParser.StatementContext)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(ASTBuilder)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from AsaParser.TermContext...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(AsaParser.TermContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(AsaParser.TermContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ASTBuilder: Set(UsedName(op,[Default]), UsedName(factor,[Default]), UsedName(start,[Default]), UsedName(getText,[Default]), UsedName(TermContext,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(AsaParser.TermContext,ModifiedNames(changes = UsedName(getChild,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(LSHIFT,[Default]), UsedName(_tset597,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(op,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(factor,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(RSHIFT,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(TIMES,[Default]), UsedName(getRuleIndex,[Default]), UsedName(DIV,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(MOD,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(DIVIDE,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(TermContext,[Default]), UsedName(AsaParser$TermContext;init;,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]))) invalidates 2 classes due to The AsaParser.TermContext has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getChild,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(LSHIFT,[Default]), UsedName(_tset597,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(op,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(factor,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(RSHIFT,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(TIMES,[Default]), UsedName(getRuleIndex,[Default]), UsedName(DIV,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(MOD,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(DIVIDE,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(TermContext,[Default]), UsedName(AsaParser$TermContext;init;,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(AsaParser.TermContext)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(ASTBuilder)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from AsaParser.Case_limbContext...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(AsaParser.Case_limbContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(AsaParser.Case_limbContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ASTBuilder: Set(UsedName(start,[Default]), UsedName(integerLiteral,[Default]), UsedName(statement,[Default]), UsedName(getText,[Default]), UsedName(Case_limbContext,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(AsaParser.Case_limbContext,ModifiedNames(changes = UsedName(getChild,[Default]), UsedName(COMMA,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(COLON,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(integerLiteral,[Default]), UsedName(parent,[Default]), UsedName(AsaParser$Case_limbContext;init;,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(statement,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(Case_limbContext,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]))) invalidates 2 classes due to The AsaParser.Case_limbContext has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getChild,[Default]), UsedName(COMMA,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(COLON,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(integerLiteral,[Default]), UsedName(parent,[Default]), UsedName(AsaParser$Case_limbContext;init;,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(statement,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(Case_limbContext,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(AsaParser.Case_limbContext)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(ASTBuilder)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from AsaParser.Repeat_statementContext...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(AsaParser.Repeat_statementContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(AsaParser.Repeat_statementContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ASTBuilder: Set(UsedName(start,[Default]), UsedName(Repeat_statementContext,[Default]), UsedName(statement,[Default]), UsedName(getText,[Default]), UsedName(logicalexpression,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(AsaParser.Repeat_statementContext,ModifiedNames(changes = UsedName(getChild,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(UNTIL,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(REPEAT,[Default]), UsedName(equals,[Default]), UsedName(SEMICOLON,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(Repeat_statementContext,[Default]), UsedName(statement,[Default]), UsedName(setAltNumber,[Default]), UsedName(AsaParser$Repeat_statementContext;init;,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(logicalexpression,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]))) invalidates 2 classes due to The AsaParser.Repeat_statementContext has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getChild,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(UNTIL,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(REPEAT,[Default]), UsedName(equals,[Default]), UsedName(SEMICOLON,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(Repeat_statementContext,[Default]), UsedName(statement,[Default]), UsedName(setAltNumber,[Default]), UsedName(AsaParser$Repeat_statementContext;init;,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(logicalexpression,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(AsaParser.Repeat_statementContext)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(ASTBuilder)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from AsaParser.Assignment_statementContext...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(AsaParser.Assignment_statementContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(AsaParser.Assignment_statementContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ASTBuilder: Set(UsedName(start,[Default]), UsedName(lhsreference,[Default]), UsedName(Assignment_statementContext,[Default]), UsedName(getText,[Default]), UsedName(logicalexpression,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(AsaParser.Assignment_statementContext,ModifiedNames(changes = UsedName(getChild,[Default]), UsedName(AsaParser$Assignment_statementContext;init;,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(SEMICOLON,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(lhsreference,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(Assignment_statementContext,[Default]), UsedName(ASSIGN,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(logicalexpression,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]))) invalidates 2 classes due to The AsaParser.Assignment_statementContext has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getChild,[Default]), UsedName(AsaParser$Assignment_statementContext;init;,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(SEMICOLON,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(lhsreference,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(Assignment_statementContext,[Default]), UsedName(ASSIGN,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(logicalexpression,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(AsaParser.Assignment_statementContext)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(ASTBuilder)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from AsaParser.StringLiteralAltContext...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(AsaParser.StringLiteralAltContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(AsaParser.StringLiteralAltContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ASTBuilder: Set(UsedName(StringLiteralAltContext,[Default]), UsedName(STRINGLITERAL,[Default]), UsedName(start,[Default]), UsedName(getText,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(AsaParser.StringLiteralAltContext,ModifiedNames(changes = UsedName(getChild,[Default]), UsedName(StringLiteralAltContext,[Default]), UsedName(enterRule,[Default]), UsedName(AsaParser$StringLiteralAltContext;init;,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(STRINGLITERAL,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]))) invalidates 2 classes due to The AsaParser.StringLiteralAltContext has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getChild,[Default]), UsedName(StringLiteralAltContext,[Default]), UsedName(enterRule,[Default]), UsedName(AsaParser$StringLiteralAltContext;init;,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(STRINGLITERAL,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(AsaParser.StringLiteralAltContext)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(ASTBuilder)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from AsaCompiler...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(AsaCompiler)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(AsaCompiler)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(AsaCompiler,ModifiedNames(changes = UsedName(executionStart,[Default]))) invalidates 1 classes due to The AsaCompiler has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(executionStart,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(AsaCompiler)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from AsaParser.SetLiteralAltContext...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(AsaParser.SetLiteralAltContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(AsaParser.SetLiteralAltContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(AsaParser.SetLiteralAltContext,ModifiedNames(changes = UsedName(getChild,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(AsaParser$SetLiteralAltContext;init;,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(SetLiteralAltContext,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(setLiteral,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]))) invalidates 1 classes due to The AsaParser.SetLiteralAltContext has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getChild,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(AsaParser$SetLiteralAltContext;init;,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(SetLiteralAltContext,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(setLiteral,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(AsaParser.SetLiteralAltContext)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from AsaParser.HexadecimalIntegerLiteralAltContext...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(AsaParser.HexadecimalIntegerLiteralAltContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(AsaParser.HexadecimalIntegerLiteralAltContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ASTBuilder: Set(UsedName(HexadecimalIntegerLiteralAltContext,[Default]), UsedName(HEXADECIMALINTEGERLITERAL,[Default]), UsedName(start,[Default]), UsedName(getText,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(AsaParser.HexadecimalIntegerLiteralAltContext,ModifiedNames(changes = UsedName(getChild,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(HexadecimalIntegerLiteralAltContext,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(AsaParser$HexadecimalIntegerLiteralAltContext;init;,[Default]), UsedName(getStart,[Default]), UsedName(HEXADECIMALINTEGERLITERAL,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]))) invalidates 2 classes due to The AsaParser.HexadecimalIntegerLiteralAltContext has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getChild,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(HexadecimalIntegerLiteralAltContext,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(AsaParser$HexadecimalIntegerLiteralAltContext;init;,[Default]), UsedName(getStart,[Default]), UsedName(HEXADECIMALINTEGERLITERAL,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(AsaParser.HexadecimalIntegerLiteralAltContext)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(ASTBuilder)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from AsaParser.LogicalexpressionContext...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(AsaParser.LogicalexpressionContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(AsaParser.LogicalexpressionContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ASTBuilder: Set(UsedName(op,[Default]), UsedName(start,[Default]), UsedName(getText,[Default]), UsedName(LogicalexpressionContext,[Default]), UsedName(relationalexpression,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(AsaParser.LogicalexpressionContext,ModifiedNames(changes = UsedName(getChild,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(op,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(OR,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(AsaParser$LogicalexpressionContext;init;,[Default]), UsedName(setAltNumber,[Default]), UsedName(AND,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(LogicalexpressionContext,[Default]), UsedName(relationalexpression,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]))) invalidates 2 classes due to The AsaParser.LogicalexpressionContext has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getChild,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(op,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(OR,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(AsaParser$LogicalexpressionContext;init;,[Default]), UsedName(setAltNumber,[Default]), UsedName(AND,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(LogicalexpressionContext,[Default]), UsedName(relationalexpression,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(AsaParser.LogicalexpressionContext)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(ASTBuilder)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from AsaLexer...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(AsaLexer)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(AsaLexer)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of AsaCompiler: Set(UsedName(AsaLexer;init;,[Default]), UsedName(AsaLexer,[Default]), UsedName(toString,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(AsaLexer,ModifiedNames(changes = UsedName(getErrorDisplay,[Default]), UsedName(END,[Default]), UsedName(FOR,[Default]), UsedName(HIDDEN,[Default]), UsedName(WS,[Default]), UsedName(popMode,[Default]), UsedName(MINUS,[Default]), UsedName(OCTALINTEGERLITERAL,[Default]), UsedName(AsaLexer;init;,[Default]), UsedName(LBRACKET,[Default]), UsedName(getInterpreter,[Default]), UsedName(getTokenTypeMap,[Default]), UsedName(channelNames,[Default]), UsedName(PLUS,[Default]), UsedName(COMMA,[Default]), UsedName(_tokenStartCharIndex,[Default]), UsedName(getChannelNames,[Default]), UsedName(setChannel,[Default]), UsedName(getInputStream,[Default]), UsedName(_tokenStartLine,[Default]), UsedName(LBRACE,[Default]), UsedName(hashCode,[Default]), UsedName(WHILE,[Default]), UsedName(getCharIndex,[Default]), UsedName(IN,[Default]), UsedName(LSHIFT,[Default]), UsedName(CONST,[Default]), UsedName(notifyAll,[Default]), UsedName(DOWNTO,[Default]), UsedName(UNTIL,[Default]), UsedName(getClass,[Default]), UsedName(getRuleNames,[Default]), UsedName(VOCABULARY,[Default]), UsedName(addErrorListener,[Default]), UsedName(NOT,[Default]), UsedName(action,[Default]), UsedName(_type,[Default]), UsedName(DECIMALINTEGERLITERAL,[Default]), UsedName(MAX_CHAR_VALUE,[Default]), UsedName(emit,[Default]), UsedName(IF,[Default]), UsedName(REPEAT,[Default]), UsedName(getSourceName,[Default]), UsedName(equals,[Default]), UsedName(GREATERTHANOREQUALTO,[Default]), UsedName(RBRACE,[Default]), UsedName(getModeNames,[Default]), UsedName(OR,[Default]), UsedName(ARRAY,[Default]), UsedName(T__0,[Default]), UsedName(UnterminatedStringLiteral,[Default]), UsedName(getCharPositionInLine,[Default]), UsedName(getATN,[Default]), UsedName(MORE,[Default]), UsedName(_channel,[Default]), UsedName(more,[Default]), UsedName(SEMICOLON,[Default]), UsedName(_sharedContextCache,[Default]), UsedName(recover,[Default]), UsedName(OF,[Default]), UsedName(removeErrorListeners,[Default]), UsedName(removeErrorListener,[Default]), UsedName(MIN_CHAR_VALUE,[Default]), UsedName(getErrorHeader,[Default]), UsedName(LPAREN,[Default]), UsedName(reset,[Default]), UsedName(getErrorListeners,[Default]), UsedName(getParseInfo,[Default]), UsedName(sempred,[Default]), UsedName(setText,[Default]), UsedName(DEFAULT_TOKEN_CHANNEL,[Default]), UsedName(getState,[Default]), UsedName(COLON,[Default]), UsedName(precpred,[Default]), UsedName(DOTDOT,[Default]), UsedName(AsaLexer,[Default]), UsedName(skip,[Default]), UsedName(BEGIN,[Default]), UsedName(VAR,[Default]), UsedName(getTokenFactory,[Default]), UsedName(RSHIFT,[Default]), UsedName(getChannel,[Default]), UsedName(SYMMETRIC_DIFFERENCE,[Default]), UsedName(getTokenType,[Default]), UsedName(HEXADECIMALINTEGERLITERAL,[Default]), UsedName(GREATERTHAN,[Default]), UsedName(_modeStack,[Default]), UsedName(STRINGLITERAL,[Default]), UsedName(pushMode,[Default]), UsedName(THEN,[Default]), UsedName(getVocabulary,[Default]), UsedName(getToken,[Default]), UsedName(COMMENT,[Default]), UsedName(NOTEQUALTO,[Default]), UsedName(EOF,[Default]), UsedName(PRINTF,[Default]), UsedName(setCharPositionInLine,[Default]), UsedName(FLOATINGPOINTLITERAL,[Default]), UsedName(EQUALS,[Default]), UsedName(RBRACKET,[Default]), UsedName(getLine,[Default]), UsedName(T__1,[Default]), UsedName(PROGRAM,[Default]), UsedName(PERIOD,[Default]), UsedName(getSerializedATN,[Default]), UsedName(getGrammarFileName,[Default]), UsedName(setLine,[Default]), UsedName(ruleNames,[Default]), UsedName(_decisionToDFA,[Default]), UsedName(wait,[Default]), UsedName(_input,[Default]), UsedName(_serializedATN,[Default]), UsedName(setTokenFactory,[Default]), UsedName(TIMES,[Default]), UsedName(DIV,[Default]), UsedName(notify,[Default]), UsedName(setToken,[Default]), UsedName(setType,[Default]), UsedName(MOD,[Default]), UsedName(SET,[Default]), UsedName(ASSIGN,[Default]), UsedName(getType,[Default]), UsedName(setInputStream,[Default]), UsedName(DO,[Default]), UsedName(IDENT,[Default]), UsedName(LESSTHAN,[Default]), UsedName(_text,[Default]), UsedName(_mode,[Default]), UsedName(_ATN,[Default]), UsedName(AND,[Default]), UsedName(getRuleIndexMap,[Default]), UsedName(modeNames,[Default]), UsedName(getText,[Default]), UsedName(mode,[Default]), UsedName(getTokenErrorDisplay,[Default]), UsedName(getTokenNames,[Default]), UsedName(LESSTHANOREQUALTO,[Default]), UsedName(getCharErrorDisplay,[Default]), UsedName(TO,[Default]), UsedName(DIVIDE,[Default]), UsedName(emitEOF,[Default]), UsedName(DEFAULT_MODE,[Default]), UsedName(setState,[Default]), UsedName(_tokenStartCharPositionInLine,[Default]), UsedName(getErrorListenerDispatch,[Default]), UsedName(SKIP,[Default]), UsedName(nextToken,[Default]), UsedName(setInterpreter,[Default]), UsedName(_token,[Default]), UsedName(tokenNames,[Default]), UsedName(_hitEOF,[Default]), UsedName(getAllTokens,[Default]), UsedName(CASE,[Default]), UsedName(ELSE,[Default]), UsedName(RPAREN,[Default]), UsedName(notifyListeners,[Default]), UsedName(toString,[Default]))) invalidates 2 classes due to The AsaLexer has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getErrorDisplay,[Default]), UsedName(END,[Default]), UsedName(FOR,[Default]), UsedName(HIDDEN,[Default]), UsedName(WS,[Default]), UsedName(popMode,[Default]), UsedName(MINUS,[Default]), UsedName(OCTALINTEGERLITERAL,[Default]), UsedName(AsaLexer;init;,[Default]), UsedName(LBRACKET,[Default]), UsedName(getInterpreter,[Default]), UsedName(getTokenTypeMap,[Default]), UsedName(channelNames,[Default]), UsedName(PLUS,[Default]), UsedName(COMMA,[Default]), UsedName(_tokenStartCharIndex,[Default]), UsedName(getChannelNames,[Default]), UsedName(setChannel,[Default]), UsedName(getInputStream,[Default]), UsedName(_tokenStartLine,[Default]), UsedName(LBRACE,[Default]), UsedName(hashCode,[Default]), UsedName(WHILE,[Default]), UsedName(getCharIndex,[Default]), UsedName(IN,[Default]), UsedName(LSHIFT,[Default]), UsedName(CONST,[Default]), UsedName(notifyAll,[Default]), UsedName(DOWNTO,[Default]), UsedName(UNTIL,[Default]), UsedName(getClass,[Default]), UsedName(getRuleNames,[Default]), UsedName(VOCABULARY,[Default]), UsedName(addErrorListener,[Default]), UsedName(NOT,[Default]), UsedName(action,[Default]), UsedName(_type,[Default]), UsedName(DECIMALINTEGERLITERAL,[Default]), UsedName(MAX_CHAR_VALUE,[Default]), UsedName(emit,[Default]), UsedName(IF,[Default]), UsedName(REPEAT,[Default]), UsedName(getSourceName,[Default]), UsedName(equals,[Default]), UsedName(GREATERTHANOREQUALTO,[Default]), UsedName(RBRACE,[Default]), UsedName(getModeNames,[Default]), UsedName(OR,[Default]), UsedName(ARRAY,[Default]), UsedName(T__0,[Default]), UsedName(UnterminatedStringLiteral,[Default]), UsedName(getCharPositionInLine,[Default]), UsedName(getATN,[Default]), UsedName(MORE,[Default]), UsedName(_channel,[Default]), UsedName(more,[Default]), UsedName(SEMICOLON,[Default]), UsedName(_sharedContextCache,[Default]), UsedName(recover,[Default]), UsedName(OF,[Default]), UsedName(removeErrorListeners,[Default]), UsedName(removeErrorListener,[Default]), UsedName(MIN_CHAR_VALUE,[Default]), UsedName(getErrorHeader,[Default]), UsedName(LPAREN,[Default]), UsedName(reset,[Default]), UsedName(getErrorListeners,[Default]), UsedName(getParseInfo,[Default]), UsedName(sempred,[Default]), UsedName(setText,[Default]), UsedName(DEFAULT_TOKEN_CHANNEL,[Default]), UsedName(getState,[Default]), UsedName(COLON,[Default]), UsedName(precpred,[Default]), UsedName(DOTDOT,[Default]), UsedName(AsaLexer,[Default]), UsedName(skip,[Default]), UsedName(BEGIN,[Default]), UsedName(VAR,[Default]), UsedName(getTokenFactory,[Default]), UsedName(RSHIFT,[Default]), UsedName(getChannel,[Default]), UsedName(SYMMETRIC_DIFFERENCE,[Default]), UsedName(getTokenType,[Default]), UsedName(HEXADECIMALINTEGERLITERAL,[Default]), UsedName(GREATERTHAN,[Default]), UsedName(_modeStack,[Default]), UsedName(STRINGLITERAL,[Default]), UsedName(pushMode,[Default]), UsedName(THEN,[Default]), UsedName(getVocabulary,[Default]), UsedName(getToken,[Default]), UsedName(COMMENT,[Default]), UsedName(NOTEQUALTO,[Default]), UsedName(EOF,[Default]), UsedName(PRINTF,[Default]), UsedName(setCharPositionInLine,[Default]), UsedName(FLOATINGPOINTLITERAL,[Default]), UsedName(EQUALS,[Default]), UsedName(RBRACKET,[Default]), UsedName(getLine,[Default]), UsedName(T__1,[Default]), UsedName(PROGRAM,[Default]), UsedName(PERIOD,[Default]), UsedName(getSerializedATN,[Default]), UsedName(getGrammarFileName,[Default]), UsedName(setLine,[Default]), UsedName(ruleNames,[Default]), UsedName(_decisionToDFA,[Default]), UsedName(wait,[Default]), UsedName(_input,[Default]), UsedName(_serializedATN,[Default]), UsedName(setTokenFactory,[Default]), UsedName(TIMES,[Default]), UsedName(DIV,[Default]), UsedName(notify,[Default]), UsedName(setToken,[Default]), UsedName(setType,[Default]), UsedName(MOD,[Default]), UsedName(SET,[Default]), UsedName(ASSIGN,[Default]), UsedName(getType,[Default]), UsedName(setInputStream,[Default]), UsedName(DO,[Default]), UsedName(IDENT,[Default]), UsedName(LESSTHAN,[Default]), UsedName(_text,[Default]), UsedName(_mode,[Default]), UsedName(_ATN,[Default]), UsedName(AND,[Default]), UsedName(getRuleIndexMap,[Default]), UsedName(modeNames,[Default]), UsedName(getText,[Default]), UsedName(mode,[Default]), UsedName(getTokenErrorDisplay,[Default]), UsedName(getTokenNames,[Default]), UsedName(LESSTHANOREQUALTO,[Default]), UsedName(getCharErrorDisplay,[Default]), UsedName(TO,[Default]), UsedName(DIVIDE,[Default]), UsedName(emitEOF,[Default]), UsedName(DEFAULT_MODE,[Default]), UsedName(setState,[Default]), UsedName(_tokenStartCharPositionInLine,[Default]), UsedName(getErrorListenerDispatch,[Default]), UsedName(SKIP,[Default]), UsedName(nextToken,[Default]), UsedName(setInterpreter,[Default]), UsedName(_token,[Default]), UsedName(tokenNames,[Default]), UsedName(_hitEOF,[Default]), UsedName(getAllTokens,[Default]), UsedName(CASE,[Default]), UsedName(ELSE,[Default]), UsedName(RPAREN,[Default]), UsedName(notifyListeners,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(AsaLexer)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(AsaCompiler)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from AsaVisitor...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(AsaVisitor)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(AsaVisitor)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(AsaVisitor,ModifiedNames(changes = UsedName(visitHexadecimalIntegerLiteralAlt,[Default]), UsedName(visitSetLiteral,[Default]), UsedName(visitRepeat_statement,[Default]), UsedName(visitTerm,[Default]), UsedName(visitDecimalIntegerLiteralAlt,[Default]), UsedName(visitSimpleexpression,[Default]), UsedName(visitStatement,[Default]), UsedName(visitOctalIntegerLiteralAlt,[Default]), UsedName(visitBooleanLiteralAlt,[Default]), UsedName(AsaVisitor,[Default]), UsedName(visitAssignment_statement,[Default]), UsedName(visitBlock,[Default]), UsedName(visitVariable_declaration,[Default]), UsedName(visit,[Default]), UsedName(visitSetLiteralAlt,[Default]), UsedName(visitWhile_statement,[Default]), UsedName(visitCase_limb,[Default]), UsedName(visitConstant_definition,[Default]), UsedName(visitRhsvalue,[Default]), UsedName(visitFloatingLiteralAlt,[Default]), UsedName(visitLogicalexpression,[Default]), UsedName(visitTerminal,[Default]), UsedName(visitIf_statement,[Default]), UsedName(visitFactor,[Default]), UsedName(visitBooleanLiteral,[Default]), UsedName(visitCase_statement,[Default]), UsedName(visitRelationalexpression,[Default]), UsedName(visitNegation,[Default]), UsedName(visitCompound_statement,[Default]), UsedName(visitFor_statement,[Default]), UsedName(visitIntegerLiteralAlt,[Default]), UsedName(visitIdentifier,[Default]), UsedName(visitStringLiteralAlt,[Default]), UsedName(visitPrintf_statement,[Default]), UsedName(visitSet,[Default]), UsedName(visitArray,[Default]), UsedName(visitIdent,[Default]), UsedName(visitProgram,[Default]), UsedName(visitErrorNode,[Default]), UsedName(visitLhsreference,[Default]), UsedName(visitChildren,[Default]))) invalidates 1 classes due to The AsaVisitor has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(visitHexadecimalIntegerLiteralAlt,[Default]), UsedName(visitSetLiteral,[Default]), UsedName(visitRepeat_statement,[Default]), UsedName(visitTerm,[Default]), UsedName(visitDecimalIntegerLiteralAlt,[Default]), UsedName(visitSimpleexpression,[Default]), UsedName(visitStatement,[Default]), UsedName(visitOctalIntegerLiteralAlt,[Default]), UsedName(visitBooleanLiteralAlt,[Default]), UsedName(AsaVisitor,[Default]), UsedName(visitAssignment_statement,[Default]), UsedName(visitBlock,[Default]), UsedName(visitVariable_declaration,[Default]), UsedName(visit,[Default]), UsedName(visitSetLiteralAlt,[Default]), UsedName(visitWhile_statement,[Default]), UsedName(visitCase_limb,[Default]), UsedName(visitConstant_definition,[Default]), UsedName(visitRhsvalue,[Default]), UsedName(visitFloatingLiteralAlt,[Default]), UsedName(visitLogicalexpression,[Default]), UsedName(visitTerminal,[Default]), UsedName(visitIf_statement,[Default]), UsedName(visitFactor,[Default]), UsedName(visitBooleanLiteral,[Default]), UsedName(visitCase_statement,[Default]), UsedName(visitRelationalexpression,[Default]), UsedName(visitNegation,[Default]), UsedName(visitCompound_statement,[Default]), UsedName(visitFor_statement,[Default]), UsedName(visitIntegerLiteralAlt,[Default]), UsedName(visitIdentifier,[Default]), UsedName(visitStringLiteralAlt,[Default]), UsedName(visitPrintf_statement,[Default]), UsedName(visitSet,[Default]), UsedName(visitArray,[Default]), UsedName(visitIdent,[Default]), UsedName(visitProgram,[Default]), UsedName(visitErrorNode,[Default]), UsedName(visitLhsreference,[Default]), UsedName(visitChildren,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(AsaVisitor)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from AsaParser.FactorContext...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(AsaParser.FactorContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(AsaParser.FactorContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ASTBuilder: Set(UsedName(fle,[Default]), UsedName(fi,[Default]), UsedName(start,[Default]), UsedName(fn,[Default]), UsedName(FactorContext,[Default]), UsedName(getText,[Default]), UsedName(literal,[Default]), UsedName(logicalexpression,[Default]), UsedName(fl,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(AsaParser.FactorContext,ModifiedNames(changes = UsedName(fle,[Default]), UsedName(getChild,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(LPAREN,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(AsaParser$FactorContext;init;,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(fi,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(fn,[Default]), UsedName(accept,[Default]), UsedName(FactorContext,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(literal,[Default]), UsedName(logicalexpression,[Default]), UsedName(EMPTY,[Default]), UsedName(fl,[Default]), UsedName(negation,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(RPAREN,[Default]), UsedName(getSourceInterval,[Default]), UsedName(rhsvalue,[Default]), UsedName(toString,[Default]))) invalidates 2 classes due to The AsaParser.FactorContext has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(fle,[Default]), UsedName(getChild,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(LPAREN,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(AsaParser$FactorContext;init;,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(fi,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(fn,[Default]), UsedName(accept,[Default]), UsedName(FactorContext,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(literal,[Default]), UsedName(logicalexpression,[Default]), UsedName(EMPTY,[Default]), UsedName(fl,[Default]), UsedName(negation,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(RPAREN,[Default]), UsedName(getSourceInterval,[Default]), UsedName(rhsvalue,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(AsaParser.FactorContext)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(ASTBuilder)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from AsaParser.IdentContext...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(AsaParser.IdentContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(AsaParser.IdentContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ASTBuilder: Set(UsedName(IdentContext,[Default]), UsedName(start,[Default]), UsedName(IDENT,[Default]), UsedName(getText,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(AsaParser.IdentContext,ModifiedNames(changes = UsedName(getChild,[Default]), UsedName(enterRule,[Default]), UsedName(AsaParser$IdentContext;init;,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(IdentContext,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(IDENT,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]))) invalidates 2 classes due to The AsaParser.IdentContext has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getChild,[Default]), UsedName(enterRule,[Default]), UsedName(AsaParser$IdentContext;init;,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(IdentContext,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(IDENT,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(AsaParser.IdentContext)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(ASTBuilder)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from AsaParser.While_statementContext...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(AsaParser.While_statementContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(AsaParser.While_statementContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ASTBuilder: Set(UsedName(While_statementContext,[Default]), UsedName(start,[Default]), UsedName(statement,[Default]), UsedName(getText,[Default]), UsedName(logicalexpression,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(AsaParser.While_statementContext,ModifiedNames(changes = UsedName(getChild,[Default]), UsedName(AsaParser$While_statementContext;init;,[Default]), UsedName(While_statementContext,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(WHILE,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(DO,[Default]), UsedName(statement,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(logicalexpression,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]))) invalidates 2 classes due to The AsaParser.While_statementContext has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getChild,[Default]), UsedName(AsaParser$While_statementContext;init;,[Default]), UsedName(While_statementContext,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(WHILE,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(DO,[Default]), UsedName(statement,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(logicalexpression,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(AsaParser.While_statementContext)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(ASTBuilder)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from AsaParser.BooleanLiteralContext...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(AsaParser.BooleanLiteralContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(AsaParser.BooleanLiteralContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ASTBuilder: Set(UsedName(start,[Default]), UsedName(BooleanLiteralContext,[Default]), UsedName(getText,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(AsaParser.BooleanLiteralContext,ModifiedNames(changes = UsedName(getChild,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(AsaParser$BooleanLiteralContext;init;,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(BooleanLiteralContext,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]))) invalidates 2 classes due to The AsaParser.BooleanLiteralContext has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getChild,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(AsaParser$BooleanLiteralContext;init;,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(BooleanLiteralContext,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(AsaParser.BooleanLiteralContext)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(ASTBuilder)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from AsaParser.SetLiteralContext...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(AsaParser.SetLiteralContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(AsaParser.SetLiteralContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ASTBuilder: Set(UsedName(SetLiteralContext,[Default]), UsedName(start,[Default]), UsedName(integerLiteral,[Default]), UsedName(getText,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(AsaParser.SetLiteralContext,ModifiedNames(changes = UsedName(getChild,[Default]), UsedName(AsaParser$SetLiteralContext;init;,[Default]), UsedName(LBRACKET,[Default]), UsedName(COMMA,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(SetLiteralContext,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(integerLiteral,[Default]), UsedName(RBRACKET,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]))) invalidates 2 classes due to The AsaParser.SetLiteralContext has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getChild,[Default]), UsedName(AsaParser$SetLiteralContext;init;,[Default]), UsedName(LBRACKET,[Default]), UsedName(COMMA,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(SetLiteralContext,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(integerLiteral,[Default]), UsedName(RBRACKET,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(AsaParser.SetLiteralContext)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(ASTBuilder)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from AsaParser.DecimalIntegerLiteralAltContext...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(AsaParser.DecimalIntegerLiteralAltContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(AsaParser.DecimalIntegerLiteralAltContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ASTBuilder: Set(UsedName(DECIMALINTEGERLITERAL,[Default]), UsedName(DecimalIntegerLiteralAltContext,[Default]), UsedName(start,[Default]), UsedName(getText,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(AsaParser.DecimalIntegerLiteralAltContext,ModifiedNames(changes = UsedName(getChild,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(DECIMALINTEGERLITERAL,[Default]), UsedName(equals,[Default]), UsedName(AsaParser$DecimalIntegerLiteralAltContext;init;,[Default]), UsedName(DecimalIntegerLiteralAltContext,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]))) invalidates 2 classes due to The AsaParser.DecimalIntegerLiteralAltContext has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getChild,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(DECIMALINTEGERLITERAL,[Default]), UsedName(equals,[Default]), UsedName(AsaParser$DecimalIntegerLiteralAltContext;init;,[Default]), UsedName(DecimalIntegerLiteralAltContext,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(AsaParser.DecimalIntegerLiteralAltContext)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(ASTBuilder)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from AsaParser.For_statementContext...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(AsaParser.For_statementContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(AsaParser.For_statementContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ASTBuilder: Set(UsedName(simpleexpression,[Default]), UsedName(identifier,[Default]), UsedName(start,[Default]), UsedName(statement,[Default]), UsedName(getText,[Default]), UsedName(TO,[Default]), UsedName(For_statementContext,[Default]), UsedName(dir,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(AsaParser.For_statementContext,ModifiedNames(changes = UsedName(FOR,[Default]), UsedName(getChild,[Default]), UsedName(simpleexpression,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(DOWNTO,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(identifier,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(ASSIGN,[Default]), UsedName(DO,[Default]), UsedName(statement,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(TO,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(For_statementContext,[Default]), UsedName(dir,[Default]), UsedName(EMPTY,[Default]), UsedName(AsaParser$For_statementContext;init;,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]))) invalidates 2 classes due to The AsaParser.For_statementContext has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(FOR,[Default]), UsedName(getChild,[Default]), UsedName(simpleexpression,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(DOWNTO,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(identifier,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(ASSIGN,[Default]), UsedName(DO,[Default]), UsedName(statement,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(TO,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(For_statementContext,[Default]), UsedName(dir,[Default]), UsedName(EMPTY,[Default]), UsedName(AsaParser$For_statementContext;init;,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(AsaParser.For_statementContext)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(ASTBuilder)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from AsaParser.IdentifierContext...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(AsaParser.IdentifierContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(AsaParser.IdentifierContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ASTBuilder: Set(UsedName(start,[Default]), UsedName(IdentifierContext,[Default]), UsedName(IDENT,[Default]), UsedName(getText,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(AsaParser.IdentifierContext,ModifiedNames(changes = UsedName(AsaParser$IdentifierContext;init;,[Default]), UsedName(getChild,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(parent,[Default]), UsedName(IdentifierContext,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(IDENT,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]))) invalidates 2 classes due to The AsaParser.IdentifierContext has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(AsaParser$IdentifierContext;init;,[Default]), UsedName(getChild,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(parent,[Default]), UsedName(IdentifierContext,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(IDENT,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(AsaParser.IdentifierContext)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(ASTBuilder)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from AsaParser.OctalIntegerLiteralAltContext...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(AsaParser.OctalIntegerLiteralAltContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(AsaParser.OctalIntegerLiteralAltContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ASTBuilder: Set(UsedName(OctalIntegerLiteralAltContext,[Default]), UsedName(OCTALINTEGERLITERAL,[Default]), UsedName(start,[Default]), UsedName(getText,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(AsaParser.OctalIntegerLiteralAltContext,ModifiedNames(changes = UsedName(getChild,[Default]), UsedName(OctalIntegerLiteralAltContext,[Default]), UsedName(OCTALINTEGERLITERAL,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(AsaParser$OctalIntegerLiteralAltContext;init;,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]))) invalidates 2 classes due to The AsaParser.OctalIntegerLiteralAltContext has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getChild,[Default]), UsedName(OctalIntegerLiteralAltContext,[Default]), UsedName(OCTALINTEGERLITERAL,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(AsaParser$OctalIntegerLiteralAltContext;init;,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(AsaParser.OctalIntegerLiteralAltContext)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(ASTBuilder)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from AsaParser...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(AsaParser)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(AsaParser)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ASTBuilder: Set(UsedName(SimpleexpressionContext,[Default]), UsedName(StringLiteralAltContext,[Default]), UsedName(simpleexpression,[Default]), UsedName(While_statementContext,[Default]), UsedName(OctalIntegerLiteralAltContext,[Default]), UsedName(OCTALINTEGERLITERAL,[Default]), UsedName(SetContext,[Default]), UsedName(atype,[Default]), UsedName(compound_statement,[Default]), UsedName(Variable_declarationContext,[Default]), UsedName(AsaParser,[Default]), UsedName(Case_statementContext,[Default]), UsedName(NOT,[Default]), UsedName(DECIMALINTEGERLITERAL,[Default]), UsedName(NegationContext,[Default]), UsedName(IdentContext,[Default]), UsedName(RelationalexpressionContext,[Default]), UsedName(DecimalIntegerLiteralAltContext,[Default]), UsedName(factor,[Default]), UsedName(booleanLiteral,[Default]), UsedName(RhsvalueContext,[Default]), UsedName(Compound_statementContext,[Default]), UsedName(HexadecimalIntegerLiteralAltContext,[Default]), UsedName(BlockContext,[Default]), UsedName(BooleanLiteralAltContext,[Default]), UsedName(SetLiteralContext,[Default]), UsedName(HEXADECIMALINTEGERLITERAL,[Default]), UsedName(variable_declaration,[Default]), UsedName(IntegerLiteralContext,[Default]), UsedName(STRINGLITERAL,[Default]), UsedName(ProgramContext,[Default]), UsedName(getVocabulary,[Default]), UsedName(identifier,[Default]), UsedName(integerLiteral,[Default]), UsedName(AtypeContext,[Default]), UsedName(FLOATINGPOINTLITERAL,[Default]), UsedName(BooleanLiteralContext,[Default]), UsedName(lhsreference,[Default]), UsedName(IdentifierContext,[Default]), UsedName(constant_definition,[Default]), UsedName(IntegerLiteralAltContext,[Default]), UsedName(Constant_definitionContext,[Default]), UsedName(Assignment_statementContext,[Default]), UsedName(FactorContext,[Default]), UsedName(Repeat_statementContext,[Default]), UsedName(statement,[Default]), UsedName(IDENT,[Default]), UsedName(LhsreferenceContext,[Default]), UsedName(term,[Default]), UsedName(case_limb,[Default]), UsedName(Printf_statementContext,[Default]), UsedName(If_statementContext,[Default]), UsedName(TO,[Default]), UsedName(literal,[Default]), UsedName(TermContext,[Default]), UsedName(For_statementContext,[Default]), UsedName(LogicalexpressionContext,[Default]), UsedName(LiteralContext,[Default]), UsedName(StatementContext,[Default]), UsedName(AsaParser;init;,[Default]), UsedName(relationalexpression,[Default]), UsedName(logicalexpression,[Default]), UsedName(Case_limbContext,[Default]), UsedName(block,[Default]), UsedName(ArrayContext,[Default]), UsedName(FloatingLiteralAltContext,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of AsaCompiler: Set(UsedName(AsaParser,[Default]), UsedName(getNumberOfSyntaxErrors,[Default]), UsedName(ProgramContext,[Default]), UsedName(program,[Default]), UsedName(AsaParser;init;,[Default]), UsedName(toString,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(AsaParser,ModifiedNames(changes = UsedName(END,[Default]), UsedName(FOR,[Default]), UsedName(SimpleexpressionContext,[Default]), UsedName(WS,[Default]), UsedName(inContext,[Default]), UsedName(printf_statement,[Default]), UsedName(setTrace,[Default]), UsedName(MINUS,[Default]), UsedName(getTokenStream,[Default]), UsedName(StringLiteralAltContext,[Default]), UsedName(simpleexpression,[Default]), UsedName(While_statementContext,[Default]), UsedName(getExpectedTokens,[Default]), UsedName(OctalIntegerLiteralAltContext,[Default]), UsedName(OCTALINTEGERLITERAL,[Default]), UsedName(SetContext,[Default]), UsedName(LBRACKET,[Default]), UsedName(getInterpreter,[Default]), UsedName(getTokenTypeMap,[Default]), UsedName(RULE_logicalexpression,[Default]), UsedName(PLUS,[Default]), UsedName(COMMA,[Default]), UsedName(getInvokingContext,[Default]), UsedName(enterRecursionRule,[Default]), UsedName(enterRule,[Default]), UsedName(getInputStream,[Default]), UsedName(RULE_integerLiteral,[Default]), UsedName(atype,[Default]), UsedName(getCurrentToken,[Default]), UsedName(compound_statement,[Default]), UsedName(LBRACE,[Default]), UsedName(TraceListener,[Default]), UsedName(setErrorHandler,[Default]), UsedName(RULE_repeat_statement,[Default]), UsedName(hashCode,[Default]), UsedName(RULE_simpleexpression,[Default]), UsedName(WHILE,[Default]), UsedName(IN,[Default]), UsedName(LSHIFT,[Default]), UsedName(CONST,[Default]), UsedName(Variable_declarationContext,[Default]), UsedName(RULE_rhsvalue,[Default]), UsedName(notifyAll,[Default]), UsedName(AsaParser,[Default]), UsedName(DOWNTO,[Default]), UsedName(UNTIL,[Default]), UsedName(RULE_case_limb,[Default]), UsedName(matchWildcard,[Default]), UsedName(getClass,[Default]), UsedName(getRuleNames,[Default]), UsedName(VOCABULARY,[Default]), UsedName(Case_statementContext,[Default]), UsedName(addErrorListener,[Default]), UsedName(NOT,[Default]), UsedName(action,[Default]), UsedName(DECIMALINTEGERLITERAL,[Default]), UsedName(enterOuterAlt,[Default]), UsedName(IF,[Default]), UsedName(getDFAStrings,[Default]), UsedName(REPEAT,[Default]), UsedName(getSourceName,[Default]), UsedName(getRuleInvocationStack,[Default]), UsedName(isTrace,[Default]), UsedName(equals,[Default]), UsedName(setContext,[Default]), UsedName(RULE_term,[Default]), UsedName(TrimToSizeListener,[Default]), UsedName(isMatchedEOF,[Default]), UsedName(GREATERTHANOREQUALTO,[Default]), UsedName(NegationContext,[Default]), UsedName(SetLiteralAltContext,[Default]), UsedName(RBRACE,[Default]), UsedName(IdentContext,[Default]), UsedName(RelationalexpressionContext,[Default]), UsedName(DecimalIntegerLiteralAltContext,[Default]), UsedName(removeParseListeners,[Default]), UsedName(RULE_negation,[Default]), UsedName(OR,[Default]), UsedName(ARRAY,[Default]), UsedName(T__0,[Default]), UsedName(setProfile,[Default]), UsedName(UnterminatedStringLiteral,[Default]), UsedName(pushNewRecursionContext,[Default]), UsedName(getTrimParseTree,[Default]), UsedName(RULE_if_statement,[Default]), UsedName(compileParseTreePattern,[Default]), UsedName(getATN,[Default]), UsedName(SEMICOLON,[Default]), UsedName(_sharedContextCache,[Default]), UsedName(OF,[Default]), UsedName(removeErrorListeners,[Default]), UsedName(removeErrorListener,[Default]), UsedName(consume,[Default]), UsedName(factor,[Default]), UsedName(getErrorHeader,[Default]), UsedName(RULE_constant_definition,[Default]), UsedName(LPAREN,[Default]), UsedName(reset,[Default]), UsedName(booleanLiteral,[Default]), UsedName(RhsvalueContext,[Default]), UsedName(getErrorListeners,[Default]), UsedName(Compound_statementContext,[Default]), UsedName(getParseInfo,[Default]), UsedName(sempred,[Default]), UsedName(for_statement,[Default]), UsedName(getState,[Default]), UsedName(COLON,[Default]), UsedName(precpred,[Default]), UsedName(DOTDOT,[Default]), UsedName(assignment_statement,[Default]), UsedName(RULE_relationalexpression,[Default]), UsedName(HexadecimalIntegerLiteralAltContext,[Default]), UsedName(BEGIN,[Default]), UsedName(BlockContext,[Default]), UsedName(RULE_variable_declaration,[Default]), UsedName(VAR,[Default]), UsedName(BooleanLiteralAltContext,[Default]), UsedName(SetLiteralContext,[Default]), UsedName(getATNWithBypassAlts,[Default]), UsedName(getTokenFactory,[Default]), UsedName(RSHIFT,[Default]), UsedName(RULE_program,[Default]), UsedName(match,[Default]), UsedName(SYMMETRIC_DIFFERENCE,[Default]), UsedName(createTerminalNode,[Default]), UsedName(getTokenType,[Default]), UsedName(HEXADECIMALINTEGERLITERAL,[Default]), UsedName(RULE_identifier,[Default]), UsedName(GREATERTHAN,[Default]), UsedName(variable_declaration,[Default]), UsedName(IntegerLiteralContext,[Default]), UsedName(dumpDFA,[Default]), UsedName(STRINGLITERAL,[Default]), UsedName(RULE_printf_statement,[Default]), UsedName(getNumberOfSyntaxErrors,[Default]), UsedName(setLiteral,[Default]), UsedName(THEN,[Default]), UsedName(ProgramContext,[Default]), UsedName(getVocabulary,[Default]), UsedName(identifier,[Default]), UsedName(program,[Default]), UsedName(COMMENT,[Default]), UsedName(NOTEQUALTO,[Default]), UsedName(integerLiteral,[Default]), UsedName(EOF,[Default]), UsedName(PRINTF,[Default]), UsedName(getExpectedTokensWithinCurrentRule,[Default]), UsedName(AtypeContext,[Default]), UsedName(FLOATINGPOINTLITERAL,[Default]), UsedName(BooleanLiteralContext,[Default]), UsedName(EQUALS,[Default]), UsedName(RBRACKET,[Default]), UsedName(T__1,[Default]), UsedName(PROGRAM,[Default]), UsedName(if_statement,[Default]), UsedName(lhsreference,[Default]), UsedName(PERIOD,[Default]), UsedName(getSerializedATN,[Default]), UsedName(getGrammarFileName,[Default]), UsedName(RULE_booleanLiteral,[Default]), UsedName(RULE_factor,[Default]), UsedName(unrollRecursionContexts,[Default]), UsedName(isExpectedToken,[Default]), UsedName(IdentifierContext,[Default]), UsedName(case_statement,[Default]), UsedName(ruleNames,[Default]), UsedName(RULE_assignment_statement,[Default]), UsedName(_decisionToDFA,[Default]), UsedName(setBuildParseTree,[Default]), UsedName(wait,[Default]), UsedName(_serializedATN,[Default]), UsedName(RULE_statement,[Default]), UsedName(setTokenFactory,[Default]), UsedName(constant_definition,[Default]), UsedName(TIMES,[Default]), UsedName(IntegerLiteralAltContext,[Default]), UsedName(getRuleIndex,[Default]), UsedName(DIV,[Default]), UsedName(setTrimParseTree,[Default]), UsedName(Constant_definitionContext,[Default]), UsedName(notify,[Default]), UsedName(Assignment_statementContext,[Default]), UsedName(FactorContext,[Default]), UsedName(MOD,[Default]), UsedName(SET,[Default]), UsedName(RULE_while_statement,[Default]), UsedName(getPrecedence,[Default]), UsedName(ASSIGN,[Default]), UsedName(setInputStream,[Default]), UsedName(Repeat_statementContext,[Default]), UsedName(DO,[Default]), UsedName(statement,[Default]), UsedName(IDENT,[Default]), UsedName(LESSTHAN,[Default]), UsedName(LhsreferenceContext,[Default]), UsedName(term,[Default]), UsedName(case_limb,[Default]), UsedName(_ATN,[Default]), UsedName(AND,[Default]), UsedName(getRuleIndexMap,[Default]), UsedName(Printf_statementContext,[Default]), UsedName(RULE_atype,[Default]), UsedName(If_statementContext,[Default]), UsedName(getTokenErrorDisplay,[Default]), UsedName(getTokenNames,[Default]), UsedName(LESSTHANOREQUALTO,[Default]), UsedName(TO,[Default]), UsedName(DIVIDE,[Default]), UsedName(exitRule,[Default]), UsedName(RULE_lhsreference,[Default]), UsedName(RULE_case_statement,[Default]), UsedName(literal,[Default]), UsedName(createErrorNode,[Default]), UsedName(getBuildParseTree,[Default]), UsedName(TermContext,[Default]), UsedName(For_statementContext,[Default]), UsedName(LogicalexpressionContext,[Default]), UsedName(LiteralContext,[Default]), UsedName(setState,[Default]), UsedName(getErrorListenerDispatch,[Default]), UsedName(StatementContext,[Default]), UsedName(repeat_statement,[Default]), UsedName(AsaParser;init;,[Default]), UsedName(RULE_compound_statement,[Default]), UsedName(RULE_setLiteral,[Default]), UsedName(setTokenStream,[Default]), UsedName(relationalexpression,[Default]), UsedName(RULE_block,[Default]), UsedName(setInterpreter,[Default]), UsedName(logicalexpression,[Default]), UsedName(tokenNames,[Default]), UsedName(getParseListeners,[Default]), UsedName(Case_limbContext,[Default]), UsedName(block,[Default]), UsedName(negation,[Default]), UsedName(notifyErrorListeners,[Default]), UsedName(while_statement,[Default]), UsedName(getRuleContext,[Default]), UsedName(getErrorHandler,[Default]), UsedName(CASE,[Default]), UsedName(RULE_literal,[Default]), UsedName(ELSE,[Default]), UsedName(RPAREN,[Default]), UsedName(ArrayContext,[Default]), UsedName(FloatingLiteralAltContext,[Default]), UsedName(RULE_for_statement,[Default]), UsedName(rhsvalue,[Default]), UsedName(addParseListener,[Default]), UsedName(removeParseListener,[Default]), UsedName(toString,[Default]), UsedName(getContext,[Default]))) invalidates 3 classes due to The AsaParser has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(END,[Default]), UsedName(FOR,[Default]), UsedName(SimpleexpressionContext,[Default]), UsedName(WS,[Default]), UsedName(inContext,[Default]), UsedName(printf_statement,[Default]), UsedName(setTrace,[Default]), UsedName(MINUS,[Default]), UsedName(getTokenStream,[Default]), UsedName(StringLiteralAltContext,[Default]), UsedName(simpleexpression,[Default]), UsedName(While_statementContext,[Default]), UsedName(getExpectedTokens,[Default]), UsedName(OctalIntegerLiteralAltContext,[Default]), UsedName(OCTALINTEGERLITERAL,[Default]), UsedName(SetContext,[Default]), UsedName(LBRACKET,[Default]), UsedName(getInterpreter,[Default]), UsedName(getTokenTypeMap,[Default]), UsedName(RULE_logicalexpression,[Default]), UsedName(PLUS,[Default]), UsedName(COMMA,[Default]), UsedName(getInvokingContext,[Default]), UsedName(enterRecursionRule,[Default]), UsedName(enterRule,[Default]), UsedName(getInputStream,[Default]), UsedName(RULE_integerLiteral,[Default]), UsedName(atype,[Default]), UsedName(getCurrentToken,[Default]), UsedName(compound_statement,[Default]), UsedName(LBRACE,[Default]), UsedName(TraceListener,[Default]), UsedName(setErrorHandler,[Default]), UsedName(RULE_repeat_statement,[Default]), UsedName(hashCode,[Default]), UsedName(RULE_simpleexpression,[Default]), UsedName(WHILE,[Default]), UsedName(IN,[Default]), UsedName(LSHIFT,[Default]), UsedName(CONST,[Default]), UsedName(Variable_declarationContext,[Default]), UsedName(RULE_rhsvalue,[Default]), UsedName(notifyAll,[Default]), UsedName(AsaParser,[Default]), UsedName(DOWNTO,[Default]), UsedName(UNTIL,[Default]), UsedName(RULE_case_limb,[Default]), UsedName(matchWildcard,[Default]), UsedName(getClass,[Default]), UsedName(getRuleNames,[Default]), UsedName(VOCABULARY,[Default]), UsedName(Case_statementContext,[Default]), UsedName(addErrorListener,[Default]), UsedName(NOT,[Default]), UsedName(action,[Default]), UsedName(DECIMALINTEGERLITERAL,[Default]), UsedName(enterOuterAlt,[Default]), UsedName(IF,[Default]), UsedName(getDFAStrings,[Default]), UsedName(REPEAT,[Default]), UsedName(getSourceName,[Default]), UsedName(getRuleInvocationStack,[Default]), UsedName(isTrace,[Default]), UsedName(equals,[Default]), UsedName(setContext,[Default]), UsedName(RULE_term,[Default]), UsedName(TrimToSizeListener,[Default]), UsedName(isMatchedEOF,[Default]), UsedName(GREATERTHANOREQUALTO,[Default]), UsedName(NegationContext,[Default]), UsedName(SetLiteralAltContext,[Default]), UsedName(RBRACE,[Default]), UsedName(IdentContext,[Default]), UsedName(RelationalexpressionContext,[Default]), UsedName(DecimalIntegerLiteralAltContext,[Default]), UsedName(removeParseListeners,[Default]), UsedName(RULE_negation,[Default]), UsedName(OR,[Default]), UsedName(ARRAY,[Default]), UsedName(T__0,[Default]), UsedName(setProfile,[Default]), UsedName(UnterminatedStringLiteral,[Default]), UsedName(pushNewRecursionContext,[Default]), UsedName(getTrimParseTree,[Default]), UsedName(RULE_if_statement,[Default]), UsedName(compileParseTreePattern,[Default]), UsedName(getATN,[Default]), UsedName(SEMICOLON,[Default]), UsedName(_sharedContextCache,[Default]), UsedName(OF,[Default]), UsedName(removeErrorListeners,[Default]), UsedName(removeErrorListener,[Default]), UsedName(consume,[Default]), UsedName(factor,[Default]), UsedName(getErrorHeader,[Default]), UsedName(RULE_constant_definition,[Default]), UsedName(LPAREN,[Default]), UsedName(reset,[Default]), UsedName(booleanLiteral,[Default]), UsedName(RhsvalueContext,[Default]), UsedName(getErrorListeners,[Default]), UsedName(Compound_statementContext,[Default]), UsedName(getParseInfo,[Default]), UsedName(sempred,[Default]), UsedName(for_statement,[Default]), UsedName(getState,[Default]), UsedName(COLON,[Default]), UsedName(precpred,[Default]), UsedName(DOTDOT,[Default]), UsedName(assignment_statement,[Default]), UsedName(RULE_relationalexpression,[Default]), UsedName(HexadecimalIntegerLiteralAltContext,[Default]), UsedName(BEGIN,[Default]), UsedName(BlockContext,[Default]), UsedName(RULE_variable_declaration,[Default]), UsedName(VAR,[Default]), UsedName(BooleanLiteralAltContext,[Default]), UsedName(SetLiteralContext,[Default]), UsedName(getATNWithBypassAlts,[Default]), UsedName(getTokenFactory,[Default]), UsedName(RSHIFT,[Default]), UsedName(RULE_program,[Default]), UsedName(match,[Default]), UsedName(SYMMETRIC_DIFFERENCE,[Default]), UsedName(createTerminalNode,[Default]), UsedName(getTokenType,[Default]), UsedName(HEXADECIMALINTEGERLITERAL,[Default]), UsedName(RULE_identifier,[Default]), UsedName(GREATERTHAN,[Default]), UsedName(variable_declaration,[Default]), UsedName(IntegerLiteralContext,[Default]), UsedName(dumpDFA,[Default]), UsedName(STRINGLITERAL,[Default]), UsedName(RULE_printf_statement,[Default]), UsedName(getNumberOfSyntaxErrors,[Default]), UsedName(setLiteral,[Default]), UsedName(THEN,[Default]), UsedName(ProgramContext,[Default]), UsedName(getVocabulary,[Default]), UsedName(identifier,[Default]), UsedName(program,[Default]), UsedName(COMMENT,[Default]), UsedName(NOTEQUALTO,[Default]), UsedName(integerLiteral,[Default]), UsedName(EOF,[Default]), UsedName(PRINTF,[Default]), UsedName(getExpectedTokensWithinCurrentRule,[Default]), UsedName(AtypeContext,[Default]), UsedName(FLOATINGPOINTLITERAL,[Default]), UsedName(BooleanLiteralContext,[Default]), UsedName(EQUALS,[Default]), UsedName(RBRACKET,[Default]), UsedName(T__1,[Default]), UsedName(PROGRAM,[Default]), UsedName(if_statement,[Default]), UsedName(lhsreference,[Default]), UsedName(PERIOD,[Default]), UsedName(getSerializedATN,[Default]), UsedName(getGrammarFileName,[Default]), UsedName(RULE_booleanLiteral,[Default]), UsedName(RULE_factor,[Default]), UsedName(unrollRecursionContexts,[Default]), UsedName(isExpectedToken,[Default]), UsedName(IdentifierContext,[Default]), UsedName(case_statement,[Default]), UsedName(ruleNames,[Default]), UsedName(RULE_assignment_statement,[Default]), UsedName(_decisionToDFA,[Default]), UsedName(setBuildParseTree,[Default]), UsedName(wait,[Default]), UsedName(_serializedATN,[Default]), UsedName(RULE_statement,[Default]), UsedName(setTokenFactory,[Default]), UsedName(constant_definition,[Default]), UsedName(TIMES,[Default]), UsedName(IntegerLiteralAltContext,[Default]), UsedName(getRuleIndex,[Default]), UsedName(DIV,[Default]), UsedName(setTrimParseTree,[Default]), UsedName(Constant_definitionContext,[Default]), UsedName(notify,[Default]), UsedName(Assignment_statementContext,[Default]), UsedName(FactorContext,[Default]), UsedName(MOD,[Default]), UsedName(SET,[Default]), UsedName(RULE_while_statement,[Default]), UsedName(getPrecedence,[Default]), UsedName(ASSIGN,[Default]), UsedName(setInputStream,[Default]), UsedName(Repeat_statementContext,[Default]), UsedName(DO,[Default]), UsedName(statement,[Default]), UsedName(IDENT,[Default]), UsedName(LESSTHAN,[Default]), UsedName(LhsreferenceContext,[Default]), UsedName(term,[Default]), UsedName(case_limb,[Default]), UsedName(_ATN,[Default]), UsedName(AND,[Default]), UsedName(getRuleIndexMap,[Default]), UsedName(Printf_statementContext,[Default]), UsedName(RULE_atype,[Default]), UsedName(If_statementContext,[Default]), UsedName(getTokenErrorDisplay,[Default]), UsedName(getTokenNames,[Default]), UsedName(LESSTHANOREQUALTO,[Default]), UsedName(TO,[Default]), UsedName(DIVIDE,[Default]), UsedName(exitRule,[Default]), UsedName(RULE_lhsreference,[Default]), UsedName(RULE_case_statement,[Default]), UsedName(literal,[Default]), UsedName(createErrorNode,[Default]), UsedName(getBuildParseTree,[Default]), UsedName(TermContext,[Default]), UsedName(For_statementContext,[Default]), UsedName(LogicalexpressionContext,[Default]), UsedName(LiteralContext,[Default]), UsedName(setState,[Default]), UsedName(getErrorListenerDispatch,[Default]), UsedName(StatementContext,[Default]), UsedName(repeat_statement,[Default]), UsedName(AsaParser;init;,[Default]), UsedName(RULE_compound_statement,[Default]), UsedName(RULE_setLiteral,[Default]), UsedName(setTokenStream,[Default]), UsedName(relationalexpression,[Default]), UsedName(RULE_block,[Default]), UsedName(setInterpreter,[Default]), UsedName(logicalexpression,[Default]), UsedName(tokenNames,[Default]), UsedName(getParseListeners,[Default]), UsedName(Case_limbContext,[Default]), UsedName(block,[Default]), UsedName(negation,[Default]), UsedName(notifyErrorListeners,[Default]), UsedName(while_statement,[Default]), UsedName(getRuleContext,[Default]), UsedName(getErrorHandler,[Default]), UsedName(CASE,[Default]), UsedName(RULE_literal,[Default]), UsedName(ELSE,[Default]), UsedName(RPAREN,[Default]), UsedName(ArrayContext,[Default]), UsedName(FloatingLiteralAltContext,[Default]), UsedName(RULE_for_statement,[Default]), UsedName(rhsvalue,[Default]), UsedName(addParseListener,[Default]), UsedName(removeParseListener,[Default]), UsedName(toString,[Default]), UsedName(getContext,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(AsaParser)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(ASTBuilder, AsaCompiler)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from AsaParser.IntegerLiteralAltContext...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(AsaParser.IntegerLiteralAltContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(AsaParser.IntegerLiteralAltContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ASTBuilder: Set(UsedName(start,[Default]), UsedName(integerLiteral,[Default]), UsedName(IntegerLiteralAltContext,[Default]), UsedName(getText,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(AsaParser.IntegerLiteralAltContext,ModifiedNames(changes = UsedName(getChild,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(integerLiteral,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(IntegerLiteralAltContext,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(AsaParser$IntegerLiteralAltContext;init;,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]))) invalidates 2 classes due to The AsaParser.IntegerLiteralAltContext has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getChild,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(integerLiteral,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(IntegerLiteralAltContext,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(AsaParser$IntegerLiteralAltContext;init;,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(AsaParser.IntegerLiteralAltContext)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(ASTBuilder)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from AsaParser.FloatingLiteralAltContext...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(AsaParser.FloatingLiteralAltContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(AsaParser.FloatingLiteralAltContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ASTBuilder: Set(UsedName(start,[Default]), UsedName(FLOATINGPOINTLITERAL,[Default]), UsedName(getText,[Default]), UsedName(FloatingLiteralAltContext,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(AsaParser.FloatingLiteralAltContext,ModifiedNames(changes = UsedName(getChild,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(AsaParser$FloatingLiteralAltContext;init;,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(FLOATINGPOINTLITERAL,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(FloatingLiteralAltContext,[Default]), UsedName(toString,[Default]))) invalidates 2 classes due to The AsaParser.FloatingLiteralAltContext has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getChild,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(AsaParser$FloatingLiteralAltContext;init;,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(FLOATINGPOINTLITERAL,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(FloatingLiteralAltContext,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(AsaParser.FloatingLiteralAltContext)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(ASTBuilder)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from AsaParser.ArrayContext...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(AsaParser.ArrayContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(AsaParser.ArrayContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ASTBuilder: Set(UsedName(atype,[Default]), UsedName(start,[Default]), UsedName(integerLiteral,[Default]), UsedName(getText,[Default]), UsedName(ArrayContext,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(AsaParser.ArrayContext,ModifiedNames(changes = UsedName(getChild,[Default]), UsedName(LBRACKET,[Default]), UsedName(AsaParser$ArrayContext;init;,[Default]), UsedName(enterRule,[Default]), UsedName(atype,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(ARRAY,[Default]), UsedName(OF,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(DOTDOT,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(integerLiteral,[Default]), UsedName(RBRACKET,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(ArrayContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]))) invalidates 2 classes due to The AsaParser.ArrayContext has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getChild,[Default]), UsedName(LBRACKET,[Default]), UsedName(AsaParser$ArrayContext;init;,[Default]), UsedName(enterRule,[Default]), UsedName(atype,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(ARRAY,[Default]), UsedName(OF,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(DOTDOT,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(integerLiteral,[Default]), UsedName(RBRACKET,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(ArrayContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(AsaParser.ArrayContext)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(ASTBuilder)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from AsaParser.Printf_statementContext...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(AsaParser.Printf_statementContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(AsaParser.Printf_statementContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ASTBuilder: Set(UsedName(simpleexpression,[Default]), UsedName(start,[Default]), UsedName(Printf_statementContext,[Default]), UsedName(getText,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(AsaParser.Printf_statementContext,ModifiedNames(changes = UsedName(getChild,[Default]), UsedName(simpleexpression,[Default]), UsedName(COMMA,[Default]), UsedName(enterRule,[Default]), UsedName(AsaParser$Printf_statementContext;init;,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(SEMICOLON,[Default]), UsedName(LPAREN,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(PRINTF,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(setAltNumber,[Default]), UsedName(Printf_statementContext,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(RPAREN,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]))) invalidates 2 classes due to The AsaParser.Printf_statementContext has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getChild,[Default]), UsedName(simpleexpression,[Default]), UsedName(COMMA,[Default]), UsedName(enterRule,[Default]), UsedName(AsaParser$Printf_statementContext;init;,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(SEMICOLON,[Default]), UsedName(LPAREN,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(PRINTF,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(setAltNumber,[Default]), UsedName(Printf_statementContext,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(RPAREN,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(AsaParser.Printf_statementContext)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(ASTBuilder)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from AsaParser.ProgramContext...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(AsaParser.ProgramContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(AsaParser.ProgramContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ASTBuilder: Set(UsedName(ProgramContext,[Default]), UsedName(start,[Default]), UsedName(IDENT,[Default]), UsedName(getText,[Default]), UsedName(block,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of AsaCompiler: Set(UsedName(toStringTree,[Default]), UsedName(ProgramContext,[Default]), UsedName(toString,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(AsaParser.ProgramContext,ModifiedNames(changes = UsedName(getChild,[Default]), UsedName(AsaParser$ProgramContext;init;,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(SEMICOLON,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(ProgramContext,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(PROGRAM,[Default]), UsedName(PERIOD,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(IDENT,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(block,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]))) invalidates 3 classes due to The AsaParser.ProgramContext has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getChild,[Default]), UsedName(AsaParser$ProgramContext;init;,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(SEMICOLON,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(ProgramContext,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(PROGRAM,[Default]), UsedName(PERIOD,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(IDENT,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(block,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(AsaParser.ProgramContext)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(ASTBuilder, AsaCompiler)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from AsaParser.LiteralContext...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(AsaParser.LiteralContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(AsaParser.LiteralContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ASTBuilder: Set(UsedName(start,[Default]), UsedName(getText,[Default]), UsedName(LiteralContext,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(AsaParser.LiteralContext,ModifiedNames(changes = UsedName(AsaParser$LiteralContext;init;,[Default]), UsedName(getChild,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(LiteralContext,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]))) invalidates 2 classes due to The AsaParser.LiteralContext has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(AsaParser$LiteralContext;init;,[Default]), UsedName(getChild,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(LiteralContext,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(AsaParser.LiteralContext)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(ASTBuilder)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from AsaParser.RhsvalueContext...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(AsaParser.RhsvalueContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(AsaParser.RhsvalueContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ASTBuilder: Set(UsedName(simpleexpression,[Default]), UsedName(RhsvalueContext,[Default]), UsedName(identifier,[Default]), UsedName(start,[Default]), UsedName(getText,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(AsaParser.RhsvalueContext,ModifiedNames(changes = UsedName(getChild,[Default]), UsedName(simpleexpression,[Default]), UsedName(LBRACKET,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(AsaParser$RhsvalueContext;init;,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(RhsvalueContext,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(identifier,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(RBRACKET,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]))) invalidates 2 classes due to The AsaParser.RhsvalueContext has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getChild,[Default]), UsedName(simpleexpression,[Default]), UsedName(LBRACKET,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(AsaParser$RhsvalueContext;init;,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(RhsvalueContext,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(identifier,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(RBRACKET,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(AsaParser.RhsvalueContext)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(ASTBuilder)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from AsaParser.If_statementContext...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(AsaParser.If_statementContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(AsaParser.If_statementContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ASTBuilder: Set(UsedName(start,[Default]), UsedName(statement,[Default]), UsedName(getText,[Default]), UsedName(If_statementContext,[Default]), UsedName(logicalexpression,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(AsaParser.If_statementContext,ModifiedNames(changes = UsedName(getChild,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(IF,[Default]), UsedName(equals,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(THEN,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(AsaParser$If_statementContext;init;,[Default]), UsedName(statement,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(If_statementContext,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(logicalexpression,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(ELSE,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]))) invalidates 2 classes due to The AsaParser.If_statementContext has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getChild,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(IF,[Default]), UsedName(equals,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(THEN,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(AsaParser$If_statementContext;init;,[Default]), UsedName(statement,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(If_statementContext,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(logicalexpression,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(ELSE,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(AsaParser.If_statementContext)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(ASTBuilder)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from AsaParser.Constant_definitionContext...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(AsaParser.Constant_definitionContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(AsaParser.Constant_definitionContext)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ASTBuilder: Set(UsedName(start,[Default]), UsedName(Constant_definitionContext,[Default]), UsedName(IDENT,[Default]), UsedName(getText,[Default]), UsedName(literal,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(AsaParser.Constant_definitionContext,ModifiedNames(changes = UsedName(getChild,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(AsaParser$Constant_definitionContext;init;,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(EQUALS,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(Constant_definitionContext,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(IDENT,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(literal,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]))) invalidates 2 classes due to The AsaParser.Constant_definitionContext has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getChild,[Default]), UsedName(enterRule,[Default]), UsedName(hashCode,[Default]), UsedName(getTokens,[Default]), UsedName(getStop,[Default]), UsedName(setParent,[Default]), UsedName(notifyAll,[Default]), UsedName(exception,[Default]), UsedName(getClass,[Default]), UsedName(toStringTree,[Default]), UsedName(equals,[Default]), UsedName(AsaParser$Constant_definitionContext;init;,[Default]), UsedName(toInfoString,[Default]), UsedName(addErrorNode,[Default]), UsedName(addChild,[Default]), UsedName(addAnyChild,[Default]), UsedName(getPayload,[Default]), UsedName(getChildCount,[Default]), UsedName(getStart,[Default]), UsedName(getRuleContexts,[Default]), UsedName(invokingState,[Default]), UsedName(start,[Default]), UsedName(getToken,[Default]), UsedName(EQUALS,[Default]), UsedName(parent,[Default]), UsedName(stop,[Default]), UsedName(copyFrom,[Default]), UsedName(wait,[Default]), UsedName(getRuleIndex,[Default]), UsedName(Constant_definitionContext,[Default]), UsedName(notify,[Default]), UsedName(accept,[Default]), UsedName(IDENT,[Default]), UsedName(setAltNumber,[Default]), UsedName(getAltNumber,[Default]), UsedName(getText,[Default]), UsedName(depth,[Default]), UsedName(getParent,[Default]), UsedName(children,[Default]), UsedName(exitRule,[Default]), UsedName(isEmpty,[Default]), UsedName(literal,[Default]), UsedName(EMPTY,[Default]), UsedName(removeLastChild,[Default]), UsedName(getRuleContext,[Default]), UsedName(getSourceInterval,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(AsaParser.Constant_definitionContext)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(ASTBuilder)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll newly invalidated classes after taking into account (previously) recompiled classes:Set()[0m
